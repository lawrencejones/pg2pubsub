---
version: "3.7"

services:
  postgres:
    hostname: postgres
    image: postgres:13.1
    restart: on-failure
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      # Turn fsync off, so we can run tests faster (not to be used in
      # production)
      - -c
      - fsync=off
    volumes:
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres-data:/var/lib/postgresql
    ports:
      - 5432:5432

  prometheus:
    image: prom/prometheus:v2.23.0
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus/rules.yml:/etc/prometheus/rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: always
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:7.3.5
    depends_on:
      - prometheus
    volumes:
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
      - ./docker/grafana/dashboard-provisioner.yml:/etc/grafana/provisioning/dashboards/provisioner.yml
      - ./docker/grafana/datasource-provisioner.yml:/etc/grafana/provisioning/datasources/provisioner.yml
      - grafana-data:/var/lib/grafana
    user: "472"
    ports:
      - 3000:3000
    restart: always

  jaeger:
    image: jaegertracing/all-in-one:1.21
    ports:
      - 5775:5775/udp  # zipkin.thrift compact
      - 6831:6831/udp  # jaeger.thrift compact
      - 6832:6832/udp  # jaeger.thrift binary
      - 16686:16686    # Frontend

# Persist data across restarts
volumes:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  default:
    driver: bridge
