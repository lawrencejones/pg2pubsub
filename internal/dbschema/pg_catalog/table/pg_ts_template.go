//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgTsTemplate = newPgTsTemplateTable()

type pgTsTemplateTable struct {
	postgres.Table

	//Columns
	Oid           postgres.ColumnString
	Tmplname      postgres.ColumnString
	Tmplnamespace postgres.ColumnString
	Tmplinit      postgres.ColumnString
	Tmpllexize    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgTsTemplateTable struct {
	pgTsTemplateTable

	EXCLUDED pgTsTemplateTable
}

// AS creates new PgTsTemplateTable with assigned alias
func (a *PgTsTemplateTable) AS(alias string) *PgTsTemplateTable {
	aliasTable := newPgTsTemplateTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgTsTemplateTable() *PgTsTemplateTable {
	return &PgTsTemplateTable{
		pgTsTemplateTable: newPgTsTemplateTableImpl("pg_catalog", "pg_ts_template"),
		EXCLUDED:          newPgTsTemplateTableImpl("", "excluded"),
	}
}

func newPgTsTemplateTableImpl(schemaName, tableName string) pgTsTemplateTable {
	var (
		OidColumn           = postgres.StringColumn("oid")
		TmplnameColumn      = postgres.StringColumn("tmplname")
		TmplnamespaceColumn = postgres.StringColumn("tmplnamespace")
		TmplinitColumn      = postgres.StringColumn("tmplinit")
		TmpllexizeColumn    = postgres.StringColumn("tmpllexize")
		allColumns          = postgres.ColumnList{OidColumn, TmplnameColumn, TmplnamespaceColumn, TmplinitColumn, TmpllexizeColumn}
		mutableColumns      = postgres.ColumnList{OidColumn, TmplnameColumn, TmplnamespaceColumn, TmplinitColumn, TmpllexizeColumn}
	)

	return pgTsTemplateTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:           OidColumn,
		Tmplname:      TmplnameColumn,
		Tmplnamespace: TmplnamespaceColumn,
		Tmplinit:      TmplinitColumn,
		Tmpllexize:    TmpllexizeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
