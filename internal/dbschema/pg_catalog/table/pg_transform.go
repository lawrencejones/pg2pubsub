//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgTransform = newPgTransformTable()

type pgTransformTable struct {
	postgres.Table

	//Columns
	Oid        postgres.ColumnString
	Trftype    postgres.ColumnString
	Trflang    postgres.ColumnString
	Trffromsql postgres.ColumnString
	Trftosql   postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgTransformTable struct {
	pgTransformTable

	EXCLUDED pgTransformTable
}

// AS creates new PgTransformTable with assigned alias
func (a *PgTransformTable) AS(alias string) *PgTransformTable {
	aliasTable := newPgTransformTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgTransformTable() *PgTransformTable {
	return &PgTransformTable{
		pgTransformTable: newPgTransformTableImpl("pg_catalog", "pg_transform"),
		EXCLUDED:         newPgTransformTableImpl("", "excluded"),
	}
}

func newPgTransformTableImpl(schemaName, tableName string) pgTransformTable {
	var (
		OidColumn        = postgres.StringColumn("oid")
		TrftypeColumn    = postgres.StringColumn("trftype")
		TrflangColumn    = postgres.StringColumn("trflang")
		TrffromsqlColumn = postgres.StringColumn("trffromsql")
		TrftosqlColumn   = postgres.StringColumn("trftosql")
		allColumns       = postgres.ColumnList{OidColumn, TrftypeColumn, TrflangColumn, TrffromsqlColumn, TrftosqlColumn}
		mutableColumns   = postgres.ColumnList{OidColumn, TrftypeColumn, TrflangColumn, TrffromsqlColumn, TrftosqlColumn}
	)

	return pgTransformTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:        OidColumn,
		Trftype:    TrftypeColumn,
		Trflang:    TrflangColumn,
		Trffromsql: TrffromsqlColumn,
		Trftosql:   TrftosqlColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
