//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var PgCollation = newPgCollationTable()

type PgCollationTable struct {
	postgres.Table

	//Columns
	Oid                 postgres.ColumnString
	Collname            postgres.ColumnString
	Collnamespace       postgres.ColumnString
	Collowner           postgres.ColumnString
	Collprovider        postgres.ColumnString
	Collisdeterministic postgres.ColumnBool
	Collencoding        postgres.ColumnInteger
	Collcollate         postgres.ColumnString
	Collctype           postgres.ColumnString
	Collversion         postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgCollationTable with assigned alias
func (a *PgCollationTable) AS(alias string) *PgCollationTable {
	aliasTable := newPgCollationTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgCollationTable() *PgCollationTable {
	var (
		OidColumn                 = postgres.StringColumn("oid")
		CollnameColumn            = postgres.StringColumn("collname")
		CollnamespaceColumn       = postgres.StringColumn("collnamespace")
		CollownerColumn           = postgres.StringColumn("collowner")
		CollproviderColumn        = postgres.StringColumn("collprovider")
		CollisdeterministicColumn = postgres.BoolColumn("collisdeterministic")
		CollencodingColumn        = postgres.IntegerColumn("collencoding")
		CollcollateColumn         = postgres.StringColumn("collcollate")
		CollctypeColumn           = postgres.StringColumn("collctype")
		CollversionColumn         = postgres.StringColumn("collversion")
	)

	return &PgCollationTable{
		Table: postgres.NewTable("pg_catalog", "pg_collation", OidColumn, CollnameColumn, CollnamespaceColumn, CollownerColumn, CollproviderColumn, CollisdeterministicColumn, CollencodingColumn, CollcollateColumn, CollctypeColumn, CollversionColumn),

		//Columns
		Oid:                 OidColumn,
		Collname:            CollnameColumn,
		Collnamespace:       CollnamespaceColumn,
		Collowner:           CollownerColumn,
		Collprovider:        CollproviderColumn,
		Collisdeterministic: CollisdeterministicColumn,
		Collencoding:        CollencodingColumn,
		Collcollate:         CollcollateColumn,
		Collctype:           CollctypeColumn,
		Collversion:         CollversionColumn,

		AllColumns:     postgres.ColumnList{OidColumn, CollnameColumn, CollnamespaceColumn, CollownerColumn, CollproviderColumn, CollisdeterministicColumn, CollencodingColumn, CollcollateColumn, CollctypeColumn, CollversionColumn},
		MutableColumns: postgres.ColumnList{OidColumn, CollnameColumn, CollnamespaceColumn, CollownerColumn, CollproviderColumn, CollisdeterministicColumn, CollencodingColumn, CollcollateColumn, CollctypeColumn, CollversionColumn},
	}
}
