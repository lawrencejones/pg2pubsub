//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgRange = newPgRangeTable()

type pgRangeTable struct {
	postgres.Table

	//Columns
	Rngtypid     postgres.ColumnString
	Rngsubtype   postgres.ColumnString
	Rngcollation postgres.ColumnString
	Rngsubopc    postgres.ColumnString
	Rngcanonical postgres.ColumnString
	Rngsubdiff   postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgRangeTable struct {
	pgRangeTable

	EXCLUDED pgRangeTable
}

// AS creates new PgRangeTable with assigned alias
func (a *PgRangeTable) AS(alias string) *PgRangeTable {
	aliasTable := newPgRangeTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgRangeTable() *PgRangeTable {
	return &PgRangeTable{
		pgRangeTable: newPgRangeTableImpl("pg_catalog", "pg_range"),
		EXCLUDED:     newPgRangeTableImpl("", "excluded"),
	}
}

func newPgRangeTableImpl(schemaName, tableName string) pgRangeTable {
	var (
		RngtypidColumn     = postgres.StringColumn("rngtypid")
		RngsubtypeColumn   = postgres.StringColumn("rngsubtype")
		RngcollationColumn = postgres.StringColumn("rngcollation")
		RngsubopcColumn    = postgres.StringColumn("rngsubopc")
		RngcanonicalColumn = postgres.StringColumn("rngcanonical")
		RngsubdiffColumn   = postgres.StringColumn("rngsubdiff")
		allColumns         = postgres.ColumnList{RngtypidColumn, RngsubtypeColumn, RngcollationColumn, RngsubopcColumn, RngcanonicalColumn, RngsubdiffColumn}
		mutableColumns     = postgres.ColumnList{RngtypidColumn, RngsubtypeColumn, RngcollationColumn, RngsubopcColumn, RngcanonicalColumn, RngsubdiffColumn}
	)

	return pgRangeTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Rngtypid:     RngtypidColumn,
		Rngsubtype:   RngsubtypeColumn,
		Rngcollation: RngcollationColumn,
		Rngsubopc:    RngsubopcColumn,
		Rngcanonical: RngcanonicalColumn,
		Rngsubdiff:   RngsubdiffColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
