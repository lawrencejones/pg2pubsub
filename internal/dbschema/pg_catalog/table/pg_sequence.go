//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgSequence = newPgSequenceTable()

type pgSequenceTable struct {
	postgres.Table

	//Columns
	Seqrelid     postgres.ColumnString
	Seqtypid     postgres.ColumnString
	Seqstart     postgres.ColumnInteger
	Seqincrement postgres.ColumnInteger
	Seqmax       postgres.ColumnInteger
	Seqmin       postgres.ColumnInteger
	Seqcache     postgres.ColumnInteger
	Seqcycle     postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgSequenceTable struct {
	pgSequenceTable

	EXCLUDED pgSequenceTable
}

// AS creates new PgSequenceTable with assigned alias
func (a *PgSequenceTable) AS(alias string) *PgSequenceTable {
	aliasTable := newPgSequenceTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgSequenceTable() *PgSequenceTable {
	return &PgSequenceTable{
		pgSequenceTable: newPgSequenceTableImpl("pg_catalog", "pg_sequence"),
		EXCLUDED:        newPgSequenceTableImpl("", "excluded"),
	}
}

func newPgSequenceTableImpl(schemaName, tableName string) pgSequenceTable {
	var (
		SeqrelidColumn     = postgres.StringColumn("seqrelid")
		SeqtypidColumn     = postgres.StringColumn("seqtypid")
		SeqstartColumn     = postgres.IntegerColumn("seqstart")
		SeqincrementColumn = postgres.IntegerColumn("seqincrement")
		SeqmaxColumn       = postgres.IntegerColumn("seqmax")
		SeqminColumn       = postgres.IntegerColumn("seqmin")
		SeqcacheColumn     = postgres.IntegerColumn("seqcache")
		SeqcycleColumn     = postgres.BoolColumn("seqcycle")
		allColumns         = postgres.ColumnList{SeqrelidColumn, SeqtypidColumn, SeqstartColumn, SeqincrementColumn, SeqmaxColumn, SeqminColumn, SeqcacheColumn, SeqcycleColumn}
		mutableColumns     = postgres.ColumnList{SeqrelidColumn, SeqtypidColumn, SeqstartColumn, SeqincrementColumn, SeqmaxColumn, SeqminColumn, SeqcacheColumn, SeqcycleColumn}
	)

	return pgSequenceTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Seqrelid:     SeqrelidColumn,
		Seqtypid:     SeqtypidColumn,
		Seqstart:     SeqstartColumn,
		Seqincrement: SeqincrementColumn,
		Seqmax:       SeqmaxColumn,
		Seqmin:       SeqminColumn,
		Seqcache:     SeqcacheColumn,
		Seqcycle:     SeqcycleColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
