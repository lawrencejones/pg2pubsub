//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgTsConfigMap = newPgTsConfigMapTable()

type pgTsConfigMapTable struct {
	postgres.Table

	//Columns
	Mapcfg       postgres.ColumnString
	Maptokentype postgres.ColumnInteger
	Mapseqno     postgres.ColumnInteger
	Mapdict      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgTsConfigMapTable struct {
	pgTsConfigMapTable

	EXCLUDED pgTsConfigMapTable
}

// AS creates new PgTsConfigMapTable with assigned alias
func (a *PgTsConfigMapTable) AS(alias string) *PgTsConfigMapTable {
	aliasTable := newPgTsConfigMapTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgTsConfigMapTable() *PgTsConfigMapTable {
	return &PgTsConfigMapTable{
		pgTsConfigMapTable: newPgTsConfigMapTableImpl("pg_catalog", "pg_ts_config_map"),
		EXCLUDED:           newPgTsConfigMapTableImpl("", "excluded"),
	}
}

func newPgTsConfigMapTableImpl(schemaName, tableName string) pgTsConfigMapTable {
	var (
		MapcfgColumn       = postgres.StringColumn("mapcfg")
		MaptokentypeColumn = postgres.IntegerColumn("maptokentype")
		MapseqnoColumn     = postgres.IntegerColumn("mapseqno")
		MapdictColumn      = postgres.StringColumn("mapdict")
		allColumns         = postgres.ColumnList{MapcfgColumn, MaptokentypeColumn, MapseqnoColumn, MapdictColumn}
		mutableColumns     = postgres.ColumnList{MapcfgColumn, MaptokentypeColumn, MapseqnoColumn, MapdictColumn}
	)

	return pgTsConfigMapTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Mapcfg:       MapcfgColumn,
		Maptokentype: MaptokentypeColumn,
		Mapseqno:     MapseqnoColumn,
		Mapdict:      MapdictColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
