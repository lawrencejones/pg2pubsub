//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgShdescription = newPgShdescriptionTable()

type pgShdescriptionTable struct {
	postgres.Table

	//Columns
	Objoid      postgres.ColumnString
	Classoid    postgres.ColumnString
	Description postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgShdescriptionTable struct {
	pgShdescriptionTable

	EXCLUDED pgShdescriptionTable
}

// AS creates new PgShdescriptionTable with assigned alias
func (a *PgShdescriptionTable) AS(alias string) *PgShdescriptionTable {
	aliasTable := newPgShdescriptionTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgShdescriptionTable() *PgShdescriptionTable {
	return &PgShdescriptionTable{
		pgShdescriptionTable: newPgShdescriptionTableImpl("pg_catalog", "pg_shdescription"),
		EXCLUDED:             newPgShdescriptionTableImpl("", "excluded"),
	}
}

func newPgShdescriptionTableImpl(schemaName, tableName string) pgShdescriptionTable {
	var (
		ObjoidColumn      = postgres.StringColumn("objoid")
		ClassoidColumn    = postgres.StringColumn("classoid")
		DescriptionColumn = postgres.StringColumn("description")
		allColumns        = postgres.ColumnList{ObjoidColumn, ClassoidColumn, DescriptionColumn}
		mutableColumns    = postgres.ColumnList{ObjoidColumn, ClassoidColumn, DescriptionColumn}
	)

	return pgShdescriptionTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Objoid:      ObjoidColumn,
		Classoid:    ClassoidColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
