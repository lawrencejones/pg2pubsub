//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgNamespace = newPgNamespaceTable()

type pgNamespaceTable struct {
	postgres.Table

	//Columns
	Oid      postgres.ColumnString
	Nspname  postgres.ColumnString
	Nspowner postgres.ColumnString
	Nspacl   postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgNamespaceTable struct {
	pgNamespaceTable

	EXCLUDED pgNamespaceTable
}

// AS creates new PgNamespaceTable with assigned alias
func (a *PgNamespaceTable) AS(alias string) *PgNamespaceTable {
	aliasTable := newPgNamespaceTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgNamespaceTable() *PgNamespaceTable {
	return &PgNamespaceTable{
		pgNamespaceTable: newPgNamespaceTableImpl("pg_catalog", "pg_namespace"),
		EXCLUDED:         newPgNamespaceTableImpl("", "excluded"),
	}
}

func newPgNamespaceTableImpl(schemaName, tableName string) pgNamespaceTable {
	var (
		OidColumn      = postgres.StringColumn("oid")
		NspnameColumn  = postgres.StringColumn("nspname")
		NspownerColumn = postgres.StringColumn("nspowner")
		NspaclColumn   = postgres.StringColumn("nspacl")
		allColumns     = postgres.ColumnList{OidColumn, NspnameColumn, NspownerColumn, NspaclColumn}
		mutableColumns = postgres.ColumnList{OidColumn, NspnameColumn, NspownerColumn, NspaclColumn}
	)

	return pgNamespaceTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:      OidColumn,
		Nspname:  NspnameColumn,
		Nspowner: NspownerColumn,
		Nspacl:   NspaclColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
