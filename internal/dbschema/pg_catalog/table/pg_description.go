//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgDescription = newPgDescriptionTable()

type pgDescriptionTable struct {
	postgres.Table

	//Columns
	Objoid      postgres.ColumnString
	Classoid    postgres.ColumnString
	Objsubid    postgres.ColumnInteger
	Description postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgDescriptionTable struct {
	pgDescriptionTable

	EXCLUDED pgDescriptionTable
}

// AS creates new PgDescriptionTable with assigned alias
func (a *PgDescriptionTable) AS(alias string) *PgDescriptionTable {
	aliasTable := newPgDescriptionTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgDescriptionTable() *PgDescriptionTable {
	return &PgDescriptionTable{
		pgDescriptionTable: newPgDescriptionTableImpl("pg_catalog", "pg_description"),
		EXCLUDED:           newPgDescriptionTableImpl("", "excluded"),
	}
}

func newPgDescriptionTableImpl(schemaName, tableName string) pgDescriptionTable {
	var (
		ObjoidColumn      = postgres.StringColumn("objoid")
		ClassoidColumn    = postgres.StringColumn("classoid")
		ObjsubidColumn    = postgres.IntegerColumn("objsubid")
		DescriptionColumn = postgres.StringColumn("description")
		allColumns        = postgres.ColumnList{ObjoidColumn, ClassoidColumn, ObjsubidColumn, DescriptionColumn}
		mutableColumns    = postgres.ColumnList{ObjoidColumn, ClassoidColumn, ObjsubidColumn, DescriptionColumn}
	)

	return pgDescriptionTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Objoid:      ObjoidColumn,
		Classoid:    ClassoidColumn,
		Objsubid:    ObjsubidColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
