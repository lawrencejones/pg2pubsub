//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgOpfamily = newPgOpfamilyTable()

type pgOpfamilyTable struct {
	postgres.Table

	//Columns
	Oid          postgres.ColumnString
	Opfmethod    postgres.ColumnString
	Opfname      postgres.ColumnString
	Opfnamespace postgres.ColumnString
	Opfowner     postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgOpfamilyTable struct {
	pgOpfamilyTable

	EXCLUDED pgOpfamilyTable
}

// AS creates new PgOpfamilyTable with assigned alias
func (a *PgOpfamilyTable) AS(alias string) *PgOpfamilyTable {
	aliasTable := newPgOpfamilyTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgOpfamilyTable() *PgOpfamilyTable {
	return &PgOpfamilyTable{
		pgOpfamilyTable: newPgOpfamilyTableImpl("pg_catalog", "pg_opfamily"),
		EXCLUDED:        newPgOpfamilyTableImpl("", "excluded"),
	}
}

func newPgOpfamilyTableImpl(schemaName, tableName string) pgOpfamilyTable {
	var (
		OidColumn          = postgres.StringColumn("oid")
		OpfmethodColumn    = postgres.StringColumn("opfmethod")
		OpfnameColumn      = postgres.StringColumn("opfname")
		OpfnamespaceColumn = postgres.StringColumn("opfnamespace")
		OpfownerColumn     = postgres.StringColumn("opfowner")
		allColumns         = postgres.ColumnList{OidColumn, OpfmethodColumn, OpfnameColumn, OpfnamespaceColumn, OpfownerColumn}
		mutableColumns     = postgres.ColumnList{OidColumn, OpfmethodColumn, OpfnameColumn, OpfnamespaceColumn, OpfownerColumn}
	)

	return pgOpfamilyTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:          OidColumn,
		Opfmethod:    OpfmethodColumn,
		Opfname:      OpfnameColumn,
		Opfnamespace: OpfnamespaceColumn,
		Opfowner:     OpfownerColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
