//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgExtension = newPgExtensionTable()

type pgExtensionTable struct {
	postgres.Table

	//Columns
	Oid            postgres.ColumnString
	Extname        postgres.ColumnString
	Extowner       postgres.ColumnString
	Extnamespace   postgres.ColumnString
	Extrelocatable postgres.ColumnBool
	Extversion     postgres.ColumnString
	Extconfig      postgres.ColumnString
	Extcondition   postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgExtensionTable struct {
	pgExtensionTable

	EXCLUDED pgExtensionTable
}

// AS creates new PgExtensionTable with assigned alias
func (a *PgExtensionTable) AS(alias string) *PgExtensionTable {
	aliasTable := newPgExtensionTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgExtensionTable() *PgExtensionTable {
	return &PgExtensionTable{
		pgExtensionTable: newPgExtensionTableImpl("pg_catalog", "pg_extension"),
		EXCLUDED:         newPgExtensionTableImpl("", "excluded"),
	}
}

func newPgExtensionTableImpl(schemaName, tableName string) pgExtensionTable {
	var (
		OidColumn            = postgres.StringColumn("oid")
		ExtnameColumn        = postgres.StringColumn("extname")
		ExtownerColumn       = postgres.StringColumn("extowner")
		ExtnamespaceColumn   = postgres.StringColumn("extnamespace")
		ExtrelocatableColumn = postgres.BoolColumn("extrelocatable")
		ExtversionColumn     = postgres.StringColumn("extversion")
		ExtconfigColumn      = postgres.StringColumn("extconfig")
		ExtconditionColumn   = postgres.StringColumn("extcondition")
		allColumns           = postgres.ColumnList{OidColumn, ExtnameColumn, ExtownerColumn, ExtnamespaceColumn, ExtrelocatableColumn, ExtversionColumn, ExtconfigColumn, ExtconditionColumn}
		mutableColumns       = postgres.ColumnList{OidColumn, ExtnameColumn, ExtownerColumn, ExtnamespaceColumn, ExtrelocatableColumn, ExtversionColumn, ExtconfigColumn, ExtconditionColumn}
	)

	return pgExtensionTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:            OidColumn,
		Extname:        ExtnameColumn,
		Extowner:       ExtownerColumn,
		Extnamespace:   ExtnamespaceColumn,
		Extrelocatable: ExtrelocatableColumn,
		Extversion:     ExtversionColumn,
		Extconfig:      ExtconfigColumn,
		Extcondition:   ExtconditionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
