//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgTsConfig = newPgTsConfigTable()

type pgTsConfigTable struct {
	postgres.Table

	//Columns
	Oid          postgres.ColumnString
	Cfgname      postgres.ColumnString
	Cfgnamespace postgres.ColumnString
	Cfgowner     postgres.ColumnString
	Cfgparser    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgTsConfigTable struct {
	pgTsConfigTable

	EXCLUDED pgTsConfigTable
}

// AS creates new PgTsConfigTable with assigned alias
func (a *PgTsConfigTable) AS(alias string) *PgTsConfigTable {
	aliasTable := newPgTsConfigTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgTsConfigTable() *PgTsConfigTable {
	return &PgTsConfigTable{
		pgTsConfigTable: newPgTsConfigTableImpl("pg_catalog", "pg_ts_config"),
		EXCLUDED:        newPgTsConfigTableImpl("", "excluded"),
	}
}

func newPgTsConfigTableImpl(schemaName, tableName string) pgTsConfigTable {
	var (
		OidColumn          = postgres.StringColumn("oid")
		CfgnameColumn      = postgres.StringColumn("cfgname")
		CfgnamespaceColumn = postgres.StringColumn("cfgnamespace")
		CfgownerColumn     = postgres.StringColumn("cfgowner")
		CfgparserColumn    = postgres.StringColumn("cfgparser")
		allColumns         = postgres.ColumnList{OidColumn, CfgnameColumn, CfgnamespaceColumn, CfgownerColumn, CfgparserColumn}
		mutableColumns     = postgres.ColumnList{OidColumn, CfgnameColumn, CfgnamespaceColumn, CfgownerColumn, CfgparserColumn}
	)

	return pgTsConfigTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:          OidColumn,
		Cfgname:      CfgnameColumn,
		Cfgnamespace: CfgnamespaceColumn,
		Cfgowner:     CfgownerColumn,
		Cfgparser:    CfgparserColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
