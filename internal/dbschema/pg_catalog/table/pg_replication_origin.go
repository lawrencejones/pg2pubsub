//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgReplicationOrigin = newPgReplicationOriginTable()

type pgReplicationOriginTable struct {
	postgres.Table

	//Columns
	Roident postgres.ColumnString
	Roname  postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgReplicationOriginTable struct {
	pgReplicationOriginTable

	EXCLUDED pgReplicationOriginTable
}

// AS creates new PgReplicationOriginTable with assigned alias
func (a *PgReplicationOriginTable) AS(alias string) *PgReplicationOriginTable {
	aliasTable := newPgReplicationOriginTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgReplicationOriginTable() *PgReplicationOriginTable {
	return &PgReplicationOriginTable{
		pgReplicationOriginTable: newPgReplicationOriginTableImpl("pg_catalog", "pg_replication_origin"),
		EXCLUDED:                 newPgReplicationOriginTableImpl("", "excluded"),
	}
}

func newPgReplicationOriginTableImpl(schemaName, tableName string) pgReplicationOriginTable {
	var (
		RoidentColumn  = postgres.StringColumn("roident")
		RonameColumn   = postgres.StringColumn("roname")
		allColumns     = postgres.ColumnList{RoidentColumn, RonameColumn}
		mutableColumns = postgres.ColumnList{RoidentColumn, RonameColumn}
	)

	return pgReplicationOriginTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Roident: RoidentColumn,
		Roname:  RonameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
