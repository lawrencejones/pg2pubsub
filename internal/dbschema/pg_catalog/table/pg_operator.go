//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var PgOperator = newPgOperatorTable()

type PgOperatorTable struct {
	postgres.Table

	//Columns
	Oid          postgres.ColumnString
	Oprname      postgres.ColumnString
	Oprnamespace postgres.ColumnString
	Oprowner     postgres.ColumnString
	Oprkind      postgres.ColumnString
	Oprcanmerge  postgres.ColumnBool
	Oprcanhash   postgres.ColumnBool
	Oprleft      postgres.ColumnString
	Oprright     postgres.ColumnString
	Oprresult    postgres.ColumnString
	Oprcom       postgres.ColumnString
	Oprnegate    postgres.ColumnString
	Oprcode      postgres.ColumnString
	Oprrest      postgres.ColumnString
	Oprjoin      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgOperatorTable with assigned alias
func (a *PgOperatorTable) AS(alias string) *PgOperatorTable {
	aliasTable := newPgOperatorTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgOperatorTable() *PgOperatorTable {
	var (
		OidColumn          = postgres.StringColumn("oid")
		OprnameColumn      = postgres.StringColumn("oprname")
		OprnamespaceColumn = postgres.StringColumn("oprnamespace")
		OprownerColumn     = postgres.StringColumn("oprowner")
		OprkindColumn      = postgres.StringColumn("oprkind")
		OprcanmergeColumn  = postgres.BoolColumn("oprcanmerge")
		OprcanhashColumn   = postgres.BoolColumn("oprcanhash")
		OprleftColumn      = postgres.StringColumn("oprleft")
		OprrightColumn     = postgres.StringColumn("oprright")
		OprresultColumn    = postgres.StringColumn("oprresult")
		OprcomColumn       = postgres.StringColumn("oprcom")
		OprnegateColumn    = postgres.StringColumn("oprnegate")
		OprcodeColumn      = postgres.StringColumn("oprcode")
		OprrestColumn      = postgres.StringColumn("oprrest")
		OprjoinColumn      = postgres.StringColumn("oprjoin")
	)

	return &PgOperatorTable{
		Table: postgres.NewTable("pg_catalog", "pg_operator", OidColumn, OprnameColumn, OprnamespaceColumn, OprownerColumn, OprkindColumn, OprcanmergeColumn, OprcanhashColumn, OprleftColumn, OprrightColumn, OprresultColumn, OprcomColumn, OprnegateColumn, OprcodeColumn, OprrestColumn, OprjoinColumn),

		//Columns
		Oid:          OidColumn,
		Oprname:      OprnameColumn,
		Oprnamespace: OprnamespaceColumn,
		Oprowner:     OprownerColumn,
		Oprkind:      OprkindColumn,
		Oprcanmerge:  OprcanmergeColumn,
		Oprcanhash:   OprcanhashColumn,
		Oprleft:      OprleftColumn,
		Oprright:     OprrightColumn,
		Oprresult:    OprresultColumn,
		Oprcom:       OprcomColumn,
		Oprnegate:    OprnegateColumn,
		Oprcode:      OprcodeColumn,
		Oprrest:      OprrestColumn,
		Oprjoin:      OprjoinColumn,

		AllColumns:     postgres.ColumnList{OidColumn, OprnameColumn, OprnamespaceColumn, OprownerColumn, OprkindColumn, OprcanmergeColumn, OprcanhashColumn, OprleftColumn, OprrightColumn, OprresultColumn, OprcomColumn, OprnegateColumn, OprcodeColumn, OprrestColumn, OprjoinColumn},
		MutableColumns: postgres.ColumnList{OidColumn, OprnameColumn, OprnamespaceColumn, OprownerColumn, OprkindColumn, OprcanmergeColumn, OprcanhashColumn, OprleftColumn, OprrightColumn, OprresultColumn, OprcomColumn, OprnegateColumn, OprcodeColumn, OprrestColumn, OprjoinColumn},
	}
}
