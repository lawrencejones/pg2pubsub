//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgTsDict = newPgTsDictTable()

type pgTsDictTable struct {
	postgres.Table

	//Columns
	Oid            postgres.ColumnString
	Dictname       postgres.ColumnString
	Dictnamespace  postgres.ColumnString
	Dictowner      postgres.ColumnString
	Dicttemplate   postgres.ColumnString
	Dictinitoption postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgTsDictTable struct {
	pgTsDictTable

	EXCLUDED pgTsDictTable
}

// AS creates new PgTsDictTable with assigned alias
func (a *PgTsDictTable) AS(alias string) *PgTsDictTable {
	aliasTable := newPgTsDictTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgTsDictTable() *PgTsDictTable {
	return &PgTsDictTable{
		pgTsDictTable: newPgTsDictTableImpl("pg_catalog", "pg_ts_dict"),
		EXCLUDED:      newPgTsDictTableImpl("", "excluded"),
	}
}

func newPgTsDictTableImpl(schemaName, tableName string) pgTsDictTable {
	var (
		OidColumn            = postgres.StringColumn("oid")
		DictnameColumn       = postgres.StringColumn("dictname")
		DictnamespaceColumn  = postgres.StringColumn("dictnamespace")
		DictownerColumn      = postgres.StringColumn("dictowner")
		DicttemplateColumn   = postgres.StringColumn("dicttemplate")
		DictinitoptionColumn = postgres.StringColumn("dictinitoption")
		allColumns           = postgres.ColumnList{OidColumn, DictnameColumn, DictnamespaceColumn, DictownerColumn, DicttemplateColumn, DictinitoptionColumn}
		mutableColumns       = postgres.ColumnList{OidColumn, DictnameColumn, DictnamespaceColumn, DictownerColumn, DicttemplateColumn, DictinitoptionColumn}
	)

	return pgTsDictTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:            OidColumn,
		Dictname:       DictnameColumn,
		Dictnamespace:  DictnamespaceColumn,
		Dictowner:      DictownerColumn,
		Dicttemplate:   DicttemplateColumn,
		Dictinitoption: DictinitoptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
