//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgForeignDataWrapper = newPgForeignDataWrapperTable()

type pgForeignDataWrapperTable struct {
	postgres.Table

	//Columns
	Oid          postgres.ColumnString
	Fdwname      postgres.ColumnString
	Fdwowner     postgres.ColumnString
	Fdwhandler   postgres.ColumnString
	Fdwvalidator postgres.ColumnString
	Fdwacl       postgres.ColumnString
	Fdwoptions   postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgForeignDataWrapperTable struct {
	pgForeignDataWrapperTable

	EXCLUDED pgForeignDataWrapperTable
}

// AS creates new PgForeignDataWrapperTable with assigned alias
func (a *PgForeignDataWrapperTable) AS(alias string) *PgForeignDataWrapperTable {
	aliasTable := newPgForeignDataWrapperTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgForeignDataWrapperTable() *PgForeignDataWrapperTable {
	return &PgForeignDataWrapperTable{
		pgForeignDataWrapperTable: newPgForeignDataWrapperTableImpl("pg_catalog", "pg_foreign_data_wrapper"),
		EXCLUDED:                  newPgForeignDataWrapperTableImpl("", "excluded"),
	}
}

func newPgForeignDataWrapperTableImpl(schemaName, tableName string) pgForeignDataWrapperTable {
	var (
		OidColumn          = postgres.StringColumn("oid")
		FdwnameColumn      = postgres.StringColumn("fdwname")
		FdwownerColumn     = postgres.StringColumn("fdwowner")
		FdwhandlerColumn   = postgres.StringColumn("fdwhandler")
		FdwvalidatorColumn = postgres.StringColumn("fdwvalidator")
		FdwaclColumn       = postgres.StringColumn("fdwacl")
		FdwoptionsColumn   = postgres.StringColumn("fdwoptions")
		allColumns         = postgres.ColumnList{OidColumn, FdwnameColumn, FdwownerColumn, FdwhandlerColumn, FdwvalidatorColumn, FdwaclColumn, FdwoptionsColumn}
		mutableColumns     = postgres.ColumnList{OidColumn, FdwnameColumn, FdwownerColumn, FdwhandlerColumn, FdwvalidatorColumn, FdwaclColumn, FdwoptionsColumn}
	)

	return pgForeignDataWrapperTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Oid:          OidColumn,
		Fdwname:      FdwnameColumn,
		Fdwowner:     FdwownerColumn,
		Fdwhandler:   FdwhandlerColumn,
		Fdwvalidator: FdwvalidatorColumn,
		Fdwacl:       FdwaclColumn,
		Fdwoptions:   FdwoptionsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
