//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var PgAggregate = newPgAggregateTable()

type PgAggregateTable struct {
	postgres.Table

	//Columns
	Aggfnoid         postgres.ColumnString
	Aggkind          postgres.ColumnString
	Aggnumdirectargs postgres.ColumnInteger
	Aggtransfn       postgres.ColumnString
	Aggfinalfn       postgres.ColumnString
	Aggcombinefn     postgres.ColumnString
	Aggserialfn      postgres.ColumnString
	Aggdeserialfn    postgres.ColumnString
	Aggmtransfn      postgres.ColumnString
	Aggminvtransfn   postgres.ColumnString
	Aggmfinalfn      postgres.ColumnString
	Aggfinalextra    postgres.ColumnBool
	Aggmfinalextra   postgres.ColumnBool
	Aggfinalmodify   postgres.ColumnString
	Aggmfinalmodify  postgres.ColumnString
	Aggsortop        postgres.ColumnString
	Aggtranstype     postgres.ColumnString
	Aggtransspace    postgres.ColumnInteger
	Aggmtranstype    postgres.ColumnString
	Aggmtransspace   postgres.ColumnInteger
	Agginitval       postgres.ColumnString
	Aggminitval      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgAggregateTable with assigned alias
func (a *PgAggregateTable) AS(alias string) *PgAggregateTable {
	aliasTable := newPgAggregateTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgAggregateTable() *PgAggregateTable {
	var (
		AggfnoidColumn         = postgres.StringColumn("aggfnoid")
		AggkindColumn          = postgres.StringColumn("aggkind")
		AggnumdirectargsColumn = postgres.IntegerColumn("aggnumdirectargs")
		AggtransfnColumn       = postgres.StringColumn("aggtransfn")
		AggfinalfnColumn       = postgres.StringColumn("aggfinalfn")
		AggcombinefnColumn     = postgres.StringColumn("aggcombinefn")
		AggserialfnColumn      = postgres.StringColumn("aggserialfn")
		AggdeserialfnColumn    = postgres.StringColumn("aggdeserialfn")
		AggmtransfnColumn      = postgres.StringColumn("aggmtransfn")
		AggminvtransfnColumn   = postgres.StringColumn("aggminvtransfn")
		AggmfinalfnColumn      = postgres.StringColumn("aggmfinalfn")
		AggfinalextraColumn    = postgres.BoolColumn("aggfinalextra")
		AggmfinalextraColumn   = postgres.BoolColumn("aggmfinalextra")
		AggfinalmodifyColumn   = postgres.StringColumn("aggfinalmodify")
		AggmfinalmodifyColumn  = postgres.StringColumn("aggmfinalmodify")
		AggsortopColumn        = postgres.StringColumn("aggsortop")
		AggtranstypeColumn     = postgres.StringColumn("aggtranstype")
		AggtransspaceColumn    = postgres.IntegerColumn("aggtransspace")
		AggmtranstypeColumn    = postgres.StringColumn("aggmtranstype")
		AggmtransspaceColumn   = postgres.IntegerColumn("aggmtransspace")
		AgginitvalColumn       = postgres.StringColumn("agginitval")
		AggminitvalColumn      = postgres.StringColumn("aggminitval")
	)

	return &PgAggregateTable{
		Table: postgres.NewTable("pg_catalog", "pg_aggregate", AggfnoidColumn, AggkindColumn, AggnumdirectargsColumn, AggtransfnColumn, AggfinalfnColumn, AggcombinefnColumn, AggserialfnColumn, AggdeserialfnColumn, AggmtransfnColumn, AggminvtransfnColumn, AggmfinalfnColumn, AggfinalextraColumn, AggmfinalextraColumn, AggfinalmodifyColumn, AggmfinalmodifyColumn, AggsortopColumn, AggtranstypeColumn, AggtransspaceColumn, AggmtranstypeColumn, AggmtransspaceColumn, AgginitvalColumn, AggminitvalColumn),

		//Columns
		Aggfnoid:         AggfnoidColumn,
		Aggkind:          AggkindColumn,
		Aggnumdirectargs: AggnumdirectargsColumn,
		Aggtransfn:       AggtransfnColumn,
		Aggfinalfn:       AggfinalfnColumn,
		Aggcombinefn:     AggcombinefnColumn,
		Aggserialfn:      AggserialfnColumn,
		Aggdeserialfn:    AggdeserialfnColumn,
		Aggmtransfn:      AggmtransfnColumn,
		Aggminvtransfn:   AggminvtransfnColumn,
		Aggmfinalfn:      AggmfinalfnColumn,
		Aggfinalextra:    AggfinalextraColumn,
		Aggmfinalextra:   AggmfinalextraColumn,
		Aggfinalmodify:   AggfinalmodifyColumn,
		Aggmfinalmodify:  AggmfinalmodifyColumn,
		Aggsortop:        AggsortopColumn,
		Aggtranstype:     AggtranstypeColumn,
		Aggtransspace:    AggtransspaceColumn,
		Aggmtranstype:    AggmtranstypeColumn,
		Aggmtransspace:   AggmtransspaceColumn,
		Agginitval:       AgginitvalColumn,
		Aggminitval:      AggminitvalColumn,

		AllColumns:     postgres.ColumnList{AggfnoidColumn, AggkindColumn, AggnumdirectargsColumn, AggtransfnColumn, AggfinalfnColumn, AggcombinefnColumn, AggserialfnColumn, AggdeserialfnColumn, AggmtransfnColumn, AggminvtransfnColumn, AggmfinalfnColumn, AggfinalextraColumn, AggmfinalextraColumn, AggfinalmodifyColumn, AggmfinalmodifyColumn, AggsortopColumn, AggtranstypeColumn, AggtransspaceColumn, AggmtranstypeColumn, AggmtransspaceColumn, AgginitvalColumn, AggminitvalColumn},
		MutableColumns: postgres.ColumnList{AggfnoidColumn, AggkindColumn, AggnumdirectargsColumn, AggtransfnColumn, AggfinalfnColumn, AggcombinefnColumn, AggserialfnColumn, AggdeserialfnColumn, AggmtransfnColumn, AggminvtransfnColumn, AggmfinalfnColumn, AggfinalextraColumn, AggmfinalextraColumn, AggfinalmodifyColumn, AggmfinalmodifyColumn, AggsortopColumn, AggtranstypeColumn, AggtransspaceColumn, AggmtranstypeColumn, AggmtransspaceColumn, AgginitvalColumn, AggminitvalColumn},
	}
}
