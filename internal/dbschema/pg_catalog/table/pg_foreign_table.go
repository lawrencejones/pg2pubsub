//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgForeignTable = newPgForeignTableTable()

type pgForeignTableTable struct {
	postgres.Table

	//Columns
	Ftrelid   postgres.ColumnString
	Ftserver  postgres.ColumnString
	Ftoptions postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgForeignTableTable struct {
	pgForeignTableTable

	EXCLUDED pgForeignTableTable
}

// AS creates new PgForeignTableTable with assigned alias
func (a *PgForeignTableTable) AS(alias string) *PgForeignTableTable {
	aliasTable := newPgForeignTableTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgForeignTableTable() *PgForeignTableTable {
	return &PgForeignTableTable{
		pgForeignTableTable: newPgForeignTableTableImpl("pg_catalog", "pg_foreign_table"),
		EXCLUDED:            newPgForeignTableTableImpl("", "excluded"),
	}
}

func newPgForeignTableTableImpl(schemaName, tableName string) pgForeignTableTable {
	var (
		FtrelidColumn   = postgres.StringColumn("ftrelid")
		FtserverColumn  = postgres.StringColumn("ftserver")
		FtoptionsColumn = postgres.StringColumn("ftoptions")
		allColumns      = postgres.ColumnList{FtrelidColumn, FtserverColumn, FtoptionsColumn}
		mutableColumns  = postgres.ColumnList{FtrelidColumn, FtserverColumn, FtoptionsColumn}
	)

	return pgForeignTableTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Ftrelid:   FtrelidColumn,
		Ftserver:  FtserverColumn,
		Ftoptions: FtoptionsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
