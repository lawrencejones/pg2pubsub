//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgAttribute = newPgAttributeTable()

type pgAttributeTable struct {
	postgres.Table

	//Columns
	Attrelid      postgres.ColumnString
	Attname       postgres.ColumnString
	Atttypid      postgres.ColumnString
	Attstattarget postgres.ColumnInteger
	Attlen        postgres.ColumnInteger
	Attnum        postgres.ColumnInteger
	Attndims      postgres.ColumnInteger
	Attcacheoff   postgres.ColumnInteger
	Atttypmod     postgres.ColumnInteger
	Attbyval      postgres.ColumnBool
	Attstorage    postgres.ColumnString
	Attalign      postgres.ColumnString
	Attnotnull    postgres.ColumnBool
	Atthasdef     postgres.ColumnBool
	Atthasmissing postgres.ColumnBool
	Attidentity   postgres.ColumnString
	Attgenerated  postgres.ColumnString
	Attisdropped  postgres.ColumnBool
	Attislocal    postgres.ColumnBool
	Attinhcount   postgres.ColumnInteger
	Attcollation  postgres.ColumnString
	Attacl        postgres.ColumnString
	Attoptions    postgres.ColumnString
	Attfdwoptions postgres.ColumnString
	Attmissingval postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgAttributeTable struct {
	pgAttributeTable

	EXCLUDED pgAttributeTable
}

// AS creates new PgAttributeTable with assigned alias
func (a *PgAttributeTable) AS(alias string) *PgAttributeTable {
	aliasTable := newPgAttributeTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgAttributeTable() *PgAttributeTable {
	return &PgAttributeTable{
		pgAttributeTable: newPgAttributeTableImpl("pg_catalog", "pg_attribute"),
		EXCLUDED:         newPgAttributeTableImpl("", "excluded"),
	}
}

func newPgAttributeTableImpl(schemaName, tableName string) pgAttributeTable {
	var (
		AttrelidColumn      = postgres.StringColumn("attrelid")
		AttnameColumn       = postgres.StringColumn("attname")
		AtttypidColumn      = postgres.StringColumn("atttypid")
		AttstattargetColumn = postgres.IntegerColumn("attstattarget")
		AttlenColumn        = postgres.IntegerColumn("attlen")
		AttnumColumn        = postgres.IntegerColumn("attnum")
		AttndimsColumn      = postgres.IntegerColumn("attndims")
		AttcacheoffColumn   = postgres.IntegerColumn("attcacheoff")
		AtttypmodColumn     = postgres.IntegerColumn("atttypmod")
		AttbyvalColumn      = postgres.BoolColumn("attbyval")
		AttstorageColumn    = postgres.StringColumn("attstorage")
		AttalignColumn      = postgres.StringColumn("attalign")
		AttnotnullColumn    = postgres.BoolColumn("attnotnull")
		AtthasdefColumn     = postgres.BoolColumn("atthasdef")
		AtthasmissingColumn = postgres.BoolColumn("atthasmissing")
		AttidentityColumn   = postgres.StringColumn("attidentity")
		AttgeneratedColumn  = postgres.StringColumn("attgenerated")
		AttisdroppedColumn  = postgres.BoolColumn("attisdropped")
		AttislocalColumn    = postgres.BoolColumn("attislocal")
		AttinhcountColumn   = postgres.IntegerColumn("attinhcount")
		AttcollationColumn  = postgres.StringColumn("attcollation")
		AttaclColumn        = postgres.StringColumn("attacl")
		AttoptionsColumn    = postgres.StringColumn("attoptions")
		AttfdwoptionsColumn = postgres.StringColumn("attfdwoptions")
		AttmissingvalColumn = postgres.StringColumn("attmissingval")
		allColumns          = postgres.ColumnList{AttrelidColumn, AttnameColumn, AtttypidColumn, AttstattargetColumn, AttlenColumn, AttnumColumn, AttndimsColumn, AttcacheoffColumn, AtttypmodColumn, AttbyvalColumn, AttstorageColumn, AttalignColumn, AttnotnullColumn, AtthasdefColumn, AtthasmissingColumn, AttidentityColumn, AttgeneratedColumn, AttisdroppedColumn, AttislocalColumn, AttinhcountColumn, AttcollationColumn, AttaclColumn, AttoptionsColumn, AttfdwoptionsColumn, AttmissingvalColumn}
		mutableColumns      = postgres.ColumnList{AttrelidColumn, AttnameColumn, AtttypidColumn, AttstattargetColumn, AttlenColumn, AttnumColumn, AttndimsColumn, AttcacheoffColumn, AtttypmodColumn, AttbyvalColumn, AttstorageColumn, AttalignColumn, AttnotnullColumn, AtthasdefColumn, AtthasmissingColumn, AttidentityColumn, AttgeneratedColumn, AttisdroppedColumn, AttislocalColumn, AttinhcountColumn, AttcollationColumn, AttaclColumn, AttoptionsColumn, AttfdwoptionsColumn, AttmissingvalColumn}
	)

	return pgAttributeTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Attrelid:      AttrelidColumn,
		Attname:       AttnameColumn,
		Atttypid:      AtttypidColumn,
		Attstattarget: AttstattargetColumn,
		Attlen:        AttlenColumn,
		Attnum:        AttnumColumn,
		Attndims:      AttndimsColumn,
		Attcacheoff:   AttcacheoffColumn,
		Atttypmod:     AtttypmodColumn,
		Attbyval:      AttbyvalColumn,
		Attstorage:    AttstorageColumn,
		Attalign:      AttalignColumn,
		Attnotnull:    AttnotnullColumn,
		Atthasdef:     AtthasdefColumn,
		Atthasmissing: AtthasmissingColumn,
		Attidentity:   AttidentityColumn,
		Attgenerated:  AttgeneratedColumn,
		Attisdropped:  AttisdroppedColumn,
		Attislocal:    AttislocalColumn,
		Attinhcount:   AttinhcountColumn,
		Attcollation:  AttcollationColumn,
		Attacl:        AttaclColumn,
		Attoptions:    AttoptionsColumn,
		Attfdwoptions: AttfdwoptionsColumn,
		Attmissingval: AttmissingvalColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
