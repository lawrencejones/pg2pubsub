//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgStatDatabaseConflicts = newPgStatDatabaseConflictsTable()

type pgStatDatabaseConflictsTable struct {
	postgres.Table

	//Columns
	Datid           postgres.ColumnString
	Datname         postgres.ColumnString
	ConflTablespace postgres.ColumnInteger
	ConflLock       postgres.ColumnInteger
	ConflSnapshot   postgres.ColumnInteger
	ConflBufferpin  postgres.ColumnInteger
	ConflDeadlock   postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgStatDatabaseConflictsTable struct {
	pgStatDatabaseConflictsTable

	EXCLUDED pgStatDatabaseConflictsTable
}

// AS creates new PgStatDatabaseConflictsTable with assigned alias
func (a *PgStatDatabaseConflictsTable) AS(alias string) *PgStatDatabaseConflictsTable {
	aliasTable := newPgStatDatabaseConflictsTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgStatDatabaseConflictsTable() *PgStatDatabaseConflictsTable {
	return &PgStatDatabaseConflictsTable{
		pgStatDatabaseConflictsTable: newPgStatDatabaseConflictsTableImpl("pg_catalog", "pg_stat_database_conflicts"),
		EXCLUDED:                     newPgStatDatabaseConflictsTableImpl("", "excluded"),
	}
}

func newPgStatDatabaseConflictsTableImpl(schemaName, tableName string) pgStatDatabaseConflictsTable {
	var (
		DatidColumn           = postgres.StringColumn("datid")
		DatnameColumn         = postgres.StringColumn("datname")
		ConflTablespaceColumn = postgres.IntegerColumn("confl_tablespace")
		ConflLockColumn       = postgres.IntegerColumn("confl_lock")
		ConflSnapshotColumn   = postgres.IntegerColumn("confl_snapshot")
		ConflBufferpinColumn  = postgres.IntegerColumn("confl_bufferpin")
		ConflDeadlockColumn   = postgres.IntegerColumn("confl_deadlock")
		allColumns            = postgres.ColumnList{DatidColumn, DatnameColumn, ConflTablespaceColumn, ConflLockColumn, ConflSnapshotColumn, ConflBufferpinColumn, ConflDeadlockColumn}
		mutableColumns        = postgres.ColumnList{DatidColumn, DatnameColumn, ConflTablespaceColumn, ConflLockColumn, ConflSnapshotColumn, ConflBufferpinColumn, ConflDeadlockColumn}
	)

	return pgStatDatabaseConflictsTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Datid:           DatidColumn,
		Datname:         DatnameColumn,
		ConflTablespace: ConflTablespaceColumn,
		ConflLock:       ConflLockColumn,
		ConflSnapshot:   ConflSnapshotColumn,
		ConflBufferpin:  ConflBufferpinColumn,
		ConflDeadlock:   ConflDeadlockColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
