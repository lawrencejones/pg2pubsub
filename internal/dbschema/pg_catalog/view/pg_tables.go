//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgTables = newPgTablesTable()

type pgTablesTable struct {
	postgres.Table

	//Columns
	Schemaname  postgres.ColumnString
	Tablename   postgres.ColumnString
	Tableowner  postgres.ColumnString
	Tablespace  postgres.ColumnString
	Hasindexes  postgres.ColumnBool
	Hasrules    postgres.ColumnBool
	Hastriggers postgres.ColumnBool
	Rowsecurity postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgTablesTable struct {
	pgTablesTable

	EXCLUDED pgTablesTable
}

// AS creates new PgTablesTable with assigned alias
func (a *PgTablesTable) AS(alias string) *PgTablesTable {
	aliasTable := newPgTablesTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgTablesTable() *PgTablesTable {
	return &PgTablesTable{
		pgTablesTable: newPgTablesTableImpl("pg_catalog", "pg_tables"),
		EXCLUDED:      newPgTablesTableImpl("", "excluded"),
	}
}

func newPgTablesTableImpl(schemaName, tableName string) pgTablesTable {
	var (
		SchemanameColumn  = postgres.StringColumn("schemaname")
		TablenameColumn   = postgres.StringColumn("tablename")
		TableownerColumn  = postgres.StringColumn("tableowner")
		TablespaceColumn  = postgres.StringColumn("tablespace")
		HasindexesColumn  = postgres.BoolColumn("hasindexes")
		HasrulesColumn    = postgres.BoolColumn("hasrules")
		HastriggersColumn = postgres.BoolColumn("hastriggers")
		RowsecurityColumn = postgres.BoolColumn("rowsecurity")
		allColumns        = postgres.ColumnList{SchemanameColumn, TablenameColumn, TableownerColumn, TablespaceColumn, HasindexesColumn, HasrulesColumn, HastriggersColumn, RowsecurityColumn}
		mutableColumns    = postgres.ColumnList{SchemanameColumn, TablenameColumn, TableownerColumn, TablespaceColumn, HasindexesColumn, HasrulesColumn, HastriggersColumn, RowsecurityColumn}
	)

	return pgTablesTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Schemaname:  SchemanameColumn,
		Tablename:   TablenameColumn,
		Tableowner:  TableownerColumn,
		Tablespace:  TablespaceColumn,
		Hasindexes:  HasindexesColumn,
		Hasrules:    HasrulesColumn,
		Hastriggers: HastriggersColumn,
		Rowsecurity: RowsecurityColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
