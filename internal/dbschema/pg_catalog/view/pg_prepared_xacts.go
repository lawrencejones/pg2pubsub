//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgPreparedXacts = newPgPreparedXactsTable()

type pgPreparedXactsTable struct {
	postgres.Table

	//Columns
	Transaction postgres.ColumnString
	Gid         postgres.ColumnString
	Prepared    postgres.ColumnTimestampz
	Owner       postgres.ColumnString
	Database    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgPreparedXactsTable struct {
	pgPreparedXactsTable

	EXCLUDED pgPreparedXactsTable
}

// AS creates new PgPreparedXactsTable with assigned alias
func (a *PgPreparedXactsTable) AS(alias string) *PgPreparedXactsTable {
	aliasTable := newPgPreparedXactsTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgPreparedXactsTable() *PgPreparedXactsTable {
	return &PgPreparedXactsTable{
		pgPreparedXactsTable: newPgPreparedXactsTableImpl("pg_catalog", "pg_prepared_xacts"),
		EXCLUDED:             newPgPreparedXactsTableImpl("", "excluded"),
	}
}

func newPgPreparedXactsTableImpl(schemaName, tableName string) pgPreparedXactsTable {
	var (
		TransactionColumn = postgres.StringColumn("transaction")
		GidColumn         = postgres.StringColumn("gid")
		PreparedColumn    = postgres.TimestampzColumn("prepared")
		OwnerColumn       = postgres.StringColumn("owner")
		DatabaseColumn    = postgres.StringColumn("database")
		allColumns        = postgres.ColumnList{TransactionColumn, GidColumn, PreparedColumn, OwnerColumn, DatabaseColumn}
		mutableColumns    = postgres.ColumnList{TransactionColumn, GidColumn, PreparedColumn, OwnerColumn, DatabaseColumn}
	)

	return pgPreparedXactsTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Transaction: TransactionColumn,
		Gid:         GidColumn,
		Prepared:    PreparedColumn,
		Owner:       OwnerColumn,
		Database:    DatabaseColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
