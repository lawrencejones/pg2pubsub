//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgSeclabels = newPgSeclabelsTable()

type pgSeclabelsTable struct {
	postgres.Table

	//Columns
	Objoid       postgres.ColumnString
	Classoid     postgres.ColumnString
	Objsubid     postgres.ColumnInteger
	Objtype      postgres.ColumnString
	Objnamespace postgres.ColumnString
	Objname      postgres.ColumnString
	Provider     postgres.ColumnString
	Label        postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgSeclabelsTable struct {
	pgSeclabelsTable

	EXCLUDED pgSeclabelsTable
}

// AS creates new PgSeclabelsTable with assigned alias
func (a *PgSeclabelsTable) AS(alias string) *PgSeclabelsTable {
	aliasTable := newPgSeclabelsTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgSeclabelsTable() *PgSeclabelsTable {
	return &PgSeclabelsTable{
		pgSeclabelsTable: newPgSeclabelsTableImpl("pg_catalog", "pg_seclabels"),
		EXCLUDED:         newPgSeclabelsTableImpl("", "excluded"),
	}
}

func newPgSeclabelsTableImpl(schemaName, tableName string) pgSeclabelsTable {
	var (
		ObjoidColumn       = postgres.StringColumn("objoid")
		ClassoidColumn     = postgres.StringColumn("classoid")
		ObjsubidColumn     = postgres.IntegerColumn("objsubid")
		ObjtypeColumn      = postgres.StringColumn("objtype")
		ObjnamespaceColumn = postgres.StringColumn("objnamespace")
		ObjnameColumn      = postgres.StringColumn("objname")
		ProviderColumn     = postgres.StringColumn("provider")
		LabelColumn        = postgres.StringColumn("label")
		allColumns         = postgres.ColumnList{ObjoidColumn, ClassoidColumn, ObjsubidColumn, ObjtypeColumn, ObjnamespaceColumn, ObjnameColumn, ProviderColumn, LabelColumn}
		mutableColumns     = postgres.ColumnList{ObjoidColumn, ClassoidColumn, ObjsubidColumn, ObjtypeColumn, ObjnamespaceColumn, ObjnameColumn, ProviderColumn, LabelColumn}
	)

	return pgSeclabelsTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Objoid:       ObjoidColumn,
		Classoid:     ClassoidColumn,
		Objsubid:     ObjsubidColumn,
		Objtype:      ObjtypeColumn,
		Objnamespace: ObjnamespaceColumn,
		Objname:      ObjnameColumn,
		Provider:     ProviderColumn,
		Label:        LabelColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
