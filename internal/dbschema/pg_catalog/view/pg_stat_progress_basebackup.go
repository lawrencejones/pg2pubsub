//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgStatProgressBasebackup = newPgStatProgressBasebackupTable()

type pgStatProgressBasebackupTable struct {
	postgres.Table

	//Columns
	Pid                 postgres.ColumnInteger
	Phase               postgres.ColumnString
	BackupTotal         postgres.ColumnInteger
	BackupStreamed      postgres.ColumnInteger
	TablespacesTotal    postgres.ColumnInteger
	TablespacesStreamed postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgStatProgressBasebackupTable struct {
	pgStatProgressBasebackupTable

	EXCLUDED pgStatProgressBasebackupTable
}

// AS creates new PgStatProgressBasebackupTable with assigned alias
func (a *PgStatProgressBasebackupTable) AS(alias string) *PgStatProgressBasebackupTable {
	aliasTable := newPgStatProgressBasebackupTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgStatProgressBasebackupTable() *PgStatProgressBasebackupTable {
	return &PgStatProgressBasebackupTable{
		pgStatProgressBasebackupTable: newPgStatProgressBasebackupTableImpl("pg_catalog", "pg_stat_progress_basebackup"),
		EXCLUDED:                      newPgStatProgressBasebackupTableImpl("", "excluded"),
	}
}

func newPgStatProgressBasebackupTableImpl(schemaName, tableName string) pgStatProgressBasebackupTable {
	var (
		PidColumn                 = postgres.IntegerColumn("pid")
		PhaseColumn               = postgres.StringColumn("phase")
		BackupTotalColumn         = postgres.IntegerColumn("backup_total")
		BackupStreamedColumn      = postgres.IntegerColumn("backup_streamed")
		TablespacesTotalColumn    = postgres.IntegerColumn("tablespaces_total")
		TablespacesStreamedColumn = postgres.IntegerColumn("tablespaces_streamed")
		allColumns                = postgres.ColumnList{PidColumn, PhaseColumn, BackupTotalColumn, BackupStreamedColumn, TablespacesTotalColumn, TablespacesStreamedColumn}
		mutableColumns            = postgres.ColumnList{PidColumn, PhaseColumn, BackupTotalColumn, BackupStreamedColumn, TablespacesTotalColumn, TablespacesStreamedColumn}
	)

	return pgStatProgressBasebackupTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Pid:                 PidColumn,
		Phase:               PhaseColumn,
		BackupTotal:         BackupTotalColumn,
		BackupStreamed:      BackupStreamedColumn,
		TablespacesTotal:    TablespacesTotalColumn,
		TablespacesStreamed: TablespacesStreamedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
