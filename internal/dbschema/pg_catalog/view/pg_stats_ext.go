//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgStatsExt = newPgStatsExtTable()

type pgStatsExtTable struct {
	postgres.Table

	//Columns
	Schemaname           postgres.ColumnString
	Tablename            postgres.ColumnString
	StatisticsSchemaname postgres.ColumnString
	StatisticsName       postgres.ColumnString
	StatisticsOwner      postgres.ColumnString
	Attnames             postgres.ColumnString
	Kinds                postgres.ColumnString
	NDistinct            postgres.ColumnString
	Dependencies         postgres.ColumnString
	MostCommonVals       postgres.ColumnString
	MostCommonValNulls   postgres.ColumnString
	MostCommonFreqs      postgres.ColumnString
	MostCommonBaseFreqs  postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgStatsExtTable struct {
	pgStatsExtTable

	EXCLUDED pgStatsExtTable
}

// AS creates new PgStatsExtTable with assigned alias
func (a *PgStatsExtTable) AS(alias string) *PgStatsExtTable {
	aliasTable := newPgStatsExtTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgStatsExtTable() *PgStatsExtTable {
	return &PgStatsExtTable{
		pgStatsExtTable: newPgStatsExtTableImpl("pg_catalog", "pg_stats_ext"),
		EXCLUDED:        newPgStatsExtTableImpl("", "excluded"),
	}
}

func newPgStatsExtTableImpl(schemaName, tableName string) pgStatsExtTable {
	var (
		SchemanameColumn           = postgres.StringColumn("schemaname")
		TablenameColumn            = postgres.StringColumn("tablename")
		StatisticsSchemanameColumn = postgres.StringColumn("statistics_schemaname")
		StatisticsNameColumn       = postgres.StringColumn("statistics_name")
		StatisticsOwnerColumn      = postgres.StringColumn("statistics_owner")
		AttnamesColumn             = postgres.StringColumn("attnames")
		KindsColumn                = postgres.StringColumn("kinds")
		NDistinctColumn            = postgres.StringColumn("n_distinct")
		DependenciesColumn         = postgres.StringColumn("dependencies")
		MostCommonValsColumn       = postgres.StringColumn("most_common_vals")
		MostCommonValNullsColumn   = postgres.StringColumn("most_common_val_nulls")
		MostCommonFreqsColumn      = postgres.StringColumn("most_common_freqs")
		MostCommonBaseFreqsColumn  = postgres.StringColumn("most_common_base_freqs")
		allColumns                 = postgres.ColumnList{SchemanameColumn, TablenameColumn, StatisticsSchemanameColumn, StatisticsNameColumn, StatisticsOwnerColumn, AttnamesColumn, KindsColumn, NDistinctColumn, DependenciesColumn, MostCommonValsColumn, MostCommonValNullsColumn, MostCommonFreqsColumn, MostCommonBaseFreqsColumn}
		mutableColumns             = postgres.ColumnList{SchemanameColumn, TablenameColumn, StatisticsSchemanameColumn, StatisticsNameColumn, StatisticsOwnerColumn, AttnamesColumn, KindsColumn, NDistinctColumn, DependenciesColumn, MostCommonValsColumn, MostCommonValNullsColumn, MostCommonFreqsColumn, MostCommonBaseFreqsColumn}
	)

	return pgStatsExtTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Schemaname:           SchemanameColumn,
		Tablename:            TablenameColumn,
		StatisticsSchemaname: StatisticsSchemanameColumn,
		StatisticsName:       StatisticsNameColumn,
		StatisticsOwner:      StatisticsOwnerColumn,
		Attnames:             AttnamesColumn,
		Kinds:                KindsColumn,
		NDistinct:            NDistinctColumn,
		Dependencies:         DependenciesColumn,
		MostCommonVals:       MostCommonValsColumn,
		MostCommonValNulls:   MostCommonValNullsColumn,
		MostCommonFreqs:      MostCommonFreqsColumn,
		MostCommonBaseFreqs:  MostCommonBaseFreqsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
