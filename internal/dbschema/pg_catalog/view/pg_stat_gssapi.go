//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PgStatGssapi = newPgStatGssapiTable()

type pgStatGssapiTable struct {
	postgres.Table

	//Columns
	Pid              postgres.ColumnInteger
	GssAuthenticated postgres.ColumnBool
	Principal        postgres.ColumnString
	Encrypted        postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PgStatGssapiTable struct {
	pgStatGssapiTable

	EXCLUDED pgStatGssapiTable
}

// AS creates new PgStatGssapiTable with assigned alias
func (a *PgStatGssapiTable) AS(alias string) *PgStatGssapiTable {
	aliasTable := newPgStatGssapiTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPgStatGssapiTable() *PgStatGssapiTable {
	return &PgStatGssapiTable{
		pgStatGssapiTable: newPgStatGssapiTableImpl("pg_catalog", "pg_stat_gssapi"),
		EXCLUDED:          newPgStatGssapiTableImpl("", "excluded"),
	}
}

func newPgStatGssapiTableImpl(schemaName, tableName string) pgStatGssapiTable {
	var (
		PidColumn              = postgres.IntegerColumn("pid")
		GssAuthenticatedColumn = postgres.BoolColumn("gss_authenticated")
		PrincipalColumn        = postgres.StringColumn("principal")
		EncryptedColumn        = postgres.BoolColumn("encrypted")
		allColumns             = postgres.ColumnList{PidColumn, GssAuthenticatedColumn, PrincipalColumn, EncryptedColumn}
		mutableColumns         = postgres.ColumnList{PidColumn, GssAuthenticatedColumn, PrincipalColumn, EncryptedColumn}
	)

	return pgStatGssapiTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Pid:              PidColumn,
		GssAuthenticated: GssAuthenticatedColumn,
		Principal:        PrincipalColumn,
		Encrypted:        EncryptedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
