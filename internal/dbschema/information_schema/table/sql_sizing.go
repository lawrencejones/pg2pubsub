//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var SQLSizing = newSQLSizingTable()

type SQLSizingTable struct {
	postgres.Table

	//Columns
	SizingID       postgres.ColumnInteger
	SizingName     postgres.ColumnString
	SupportedValue postgres.ColumnInteger
	Comments       postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new SQLSizingTable with assigned alias
func (a *SQLSizingTable) AS(alias string) *SQLSizingTable {
	aliasTable := newSQLSizingTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newSQLSizingTable() *SQLSizingTable {
	var (
		SizingIDColumn       = postgres.IntegerColumn("sizing_id")
		SizingNameColumn     = postgres.StringColumn("sizing_name")
		SupportedValueColumn = postgres.IntegerColumn("supported_value")
		CommentsColumn       = postgres.StringColumn("comments")
	)

	return &SQLSizingTable{
		Table: postgres.NewTable("information_schema", "sql_sizing", SizingIDColumn, SizingNameColumn, SupportedValueColumn, CommentsColumn),

		//Columns
		SizingID:       SizingIDColumn,
		SizingName:     SizingNameColumn,
		SupportedValue: SupportedValueColumn,
		Comments:       CommentsColumn,

		AllColumns:     postgres.ColumnList{SizingIDColumn, SizingNameColumn, SupportedValueColumn, CommentsColumn},
		MutableColumns: postgres.ColumnList{SizingIDColumn, SizingNameColumn, SupportedValueColumn, CommentsColumn},
	}
}
