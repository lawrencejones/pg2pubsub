//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var SQLLanguages = newSQLLanguagesTable()

type SQLLanguagesTable struct {
	postgres.Table

	//Columns
	SQLLanguageSource              postgres.ColumnString
	SQLLanguageYear                postgres.ColumnString
	SQLLanguageConformance         postgres.ColumnString
	SQLLanguageIntegrity           postgres.ColumnString
	SQLLanguageImplementation      postgres.ColumnString
	SQLLanguageBindingStyle        postgres.ColumnString
	SQLLanguageProgrammingLanguage postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new SQLLanguagesTable with assigned alias
func (a *SQLLanguagesTable) AS(alias string) *SQLLanguagesTable {
	aliasTable := newSQLLanguagesTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newSQLLanguagesTable() *SQLLanguagesTable {
	var (
		SQLLanguageSourceColumn              = postgres.StringColumn("sql_language_source")
		SQLLanguageYearColumn                = postgres.StringColumn("sql_language_year")
		SQLLanguageConformanceColumn         = postgres.StringColumn("sql_language_conformance")
		SQLLanguageIntegrityColumn           = postgres.StringColumn("sql_language_integrity")
		SQLLanguageImplementationColumn      = postgres.StringColumn("sql_language_implementation")
		SQLLanguageBindingStyleColumn        = postgres.StringColumn("sql_language_binding_style")
		SQLLanguageProgrammingLanguageColumn = postgres.StringColumn("sql_language_programming_language")
	)

	return &SQLLanguagesTable{
		Table: postgres.NewTable("information_schema", "sql_languages", SQLLanguageSourceColumn, SQLLanguageYearColumn, SQLLanguageConformanceColumn, SQLLanguageIntegrityColumn, SQLLanguageImplementationColumn, SQLLanguageBindingStyleColumn, SQLLanguageProgrammingLanguageColumn),

		//Columns
		SQLLanguageSource:              SQLLanguageSourceColumn,
		SQLLanguageYear:                SQLLanguageYearColumn,
		SQLLanguageConformance:         SQLLanguageConformanceColumn,
		SQLLanguageIntegrity:           SQLLanguageIntegrityColumn,
		SQLLanguageImplementation:      SQLLanguageImplementationColumn,
		SQLLanguageBindingStyle:        SQLLanguageBindingStyleColumn,
		SQLLanguageProgrammingLanguage: SQLLanguageProgrammingLanguageColumn,

		AllColumns:     postgres.ColumnList{SQLLanguageSourceColumn, SQLLanguageYearColumn, SQLLanguageConformanceColumn, SQLLanguageIntegrityColumn, SQLLanguageImplementationColumn, SQLLanguageBindingStyleColumn, SQLLanguageProgrammingLanguageColumn},
		MutableColumns: postgres.ColumnList{SQLLanguageSourceColumn, SQLLanguageYearColumn, SQLLanguageConformanceColumn, SQLLanguageIntegrityColumn, SQLLanguageImplementationColumn, SQLLanguageBindingStyleColumn, SQLLanguageProgrammingLanguageColumn},
	}
}
