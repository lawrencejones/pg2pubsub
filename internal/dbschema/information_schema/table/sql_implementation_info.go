//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SQLImplementationInfo = newSQLImplementationInfoTable()

type sQLImplementationInfoTable struct {
	postgres.Table

	//Columns
	ImplementationInfoID   postgres.ColumnString
	ImplementationInfoName postgres.ColumnString
	IntegerValue           postgres.ColumnInteger
	CharacterValue         postgres.ColumnString
	Comments               postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SQLImplementationInfoTable struct {
	sQLImplementationInfoTable

	EXCLUDED sQLImplementationInfoTable
}

// AS creates new SQLImplementationInfoTable with assigned alias
func (a *SQLImplementationInfoTable) AS(alias string) *SQLImplementationInfoTable {
	aliasTable := newSQLImplementationInfoTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newSQLImplementationInfoTable() *SQLImplementationInfoTable {
	return &SQLImplementationInfoTable{
		sQLImplementationInfoTable: newSQLImplementationInfoTableImpl("information_schema", "sql_implementation_info"),
		EXCLUDED:                   newSQLImplementationInfoTableImpl("", "excluded"),
	}
}

func newSQLImplementationInfoTableImpl(schemaName, tableName string) sQLImplementationInfoTable {
	var (
		ImplementationInfoIDColumn   = postgres.StringColumn("implementation_info_id")
		ImplementationInfoNameColumn = postgres.StringColumn("implementation_info_name")
		IntegerValueColumn           = postgres.IntegerColumn("integer_value")
		CharacterValueColumn         = postgres.StringColumn("character_value")
		CommentsColumn               = postgres.StringColumn("comments")
		allColumns                   = postgres.ColumnList{ImplementationInfoIDColumn, ImplementationInfoNameColumn, IntegerValueColumn, CharacterValueColumn, CommentsColumn}
		mutableColumns               = postgres.ColumnList{ImplementationInfoIDColumn, ImplementationInfoNameColumn, IntegerValueColumn, CharacterValueColumn, CommentsColumn}
	)

	return sQLImplementationInfoTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ImplementationInfoID:   ImplementationInfoIDColumn,
		ImplementationInfoName: ImplementationInfoNameColumn,
		IntegerValue:           IntegerValueColumn,
		CharacterValue:         CharacterValueColumn,
		Comments:               CommentsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
