//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var UserMappings = newUserMappingsTable()

type UserMappingsTable struct {
	postgres.Table

	//Columns
	AuthorizationIdentifier postgres.ColumnString
	ForeignServerCatalog    postgres.ColumnString
	ForeignServerName       postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new UserMappingsTable with assigned alias
func (a *UserMappingsTable) AS(alias string) *UserMappingsTable {
	aliasTable := newUserMappingsTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newUserMappingsTable() *UserMappingsTable {
	var (
		AuthorizationIdentifierColumn = postgres.StringColumn("authorization_identifier")
		ForeignServerCatalogColumn    = postgres.StringColumn("foreign_server_catalog")
		ForeignServerNameColumn       = postgres.StringColumn("foreign_server_name")
	)

	return &UserMappingsTable{
		Table: postgres.NewTable("information_schema", "user_mappings", AuthorizationIdentifierColumn, ForeignServerCatalogColumn, ForeignServerNameColumn),

		//Columns
		AuthorizationIdentifier: AuthorizationIdentifierColumn,
		ForeignServerCatalog:    ForeignServerCatalogColumn,
		ForeignServerName:       ForeignServerNameColumn,

		AllColumns:     postgres.ColumnList{AuthorizationIdentifierColumn, ForeignServerCatalogColumn, ForeignServerNameColumn},
		MutableColumns: postgres.ColumnList{AuthorizationIdentifierColumn, ForeignServerCatalogColumn, ForeignServerNameColumn},
	}
}
