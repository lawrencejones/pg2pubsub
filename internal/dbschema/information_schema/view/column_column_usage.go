//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ColumnColumnUsage = newColumnColumnUsageTable()

type columnColumnUsageTable struct {
	postgres.Table

	//Columns
	TableCatalog    postgres.ColumnString
	TableSchema     postgres.ColumnString
	TableName       postgres.ColumnString
	ColumnName      postgres.ColumnString
	DependentColumn postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ColumnColumnUsageTable struct {
	columnColumnUsageTable

	EXCLUDED columnColumnUsageTable
}

// AS creates new ColumnColumnUsageTable with assigned alias
func (a *ColumnColumnUsageTable) AS(alias string) *ColumnColumnUsageTable {
	aliasTable := newColumnColumnUsageTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newColumnColumnUsageTable() *ColumnColumnUsageTable {
	return &ColumnColumnUsageTable{
		columnColumnUsageTable: newColumnColumnUsageTableImpl("information_schema", "column_column_usage"),
		EXCLUDED:               newColumnColumnUsageTableImpl("", "excluded"),
	}
}

func newColumnColumnUsageTableImpl(schemaName, tableName string) columnColumnUsageTable {
	var (
		TableCatalogColumn    = postgres.StringColumn("table_catalog")
		TableSchemaColumn     = postgres.StringColumn("table_schema")
		TableNameColumn       = postgres.StringColumn("table_name")
		ColumnNameColumn      = postgres.StringColumn("column_name")
		DependentColumnColumn = postgres.StringColumn("dependent_column")
		allColumns            = postgres.ColumnList{TableCatalogColumn, TableSchemaColumn, TableNameColumn, ColumnNameColumn, DependentColumnColumn}
		mutableColumns        = postgres.ColumnList{TableCatalogColumn, TableSchemaColumn, TableNameColumn, ColumnNameColumn, DependentColumnColumn}
	)

	return columnColumnUsageTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		TableCatalog:    TableCatalogColumn,
		TableSchema:     TableSchemaColumn,
		TableName:       TableNameColumn,
		ColumnName:      ColumnNameColumn,
		DependentColumn: DependentColumnColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
