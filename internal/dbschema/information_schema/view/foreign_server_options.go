//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ForeignServerOptions = newForeignServerOptionsTable()

type foreignServerOptionsTable struct {
	postgres.Table

	//Columns
	ForeignServerCatalog postgres.ColumnString
	ForeignServerName    postgres.ColumnString
	OptionName           postgres.ColumnString
	OptionValue          postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ForeignServerOptionsTable struct {
	foreignServerOptionsTable

	EXCLUDED foreignServerOptionsTable
}

// AS creates new ForeignServerOptionsTable with assigned alias
func (a *ForeignServerOptionsTable) AS(alias string) *ForeignServerOptionsTable {
	aliasTable := newForeignServerOptionsTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newForeignServerOptionsTable() *ForeignServerOptionsTable {
	return &ForeignServerOptionsTable{
		foreignServerOptionsTable: newForeignServerOptionsTableImpl("information_schema", "foreign_server_options"),
		EXCLUDED:                  newForeignServerOptionsTableImpl("", "excluded"),
	}
}

func newForeignServerOptionsTableImpl(schemaName, tableName string) foreignServerOptionsTable {
	var (
		ForeignServerCatalogColumn = postgres.StringColumn("foreign_server_catalog")
		ForeignServerNameColumn    = postgres.StringColumn("foreign_server_name")
		OptionNameColumn           = postgres.StringColumn("option_name")
		OptionValueColumn          = postgres.StringColumn("option_value")
		allColumns                 = postgres.ColumnList{ForeignServerCatalogColumn, ForeignServerNameColumn, OptionNameColumn, OptionValueColumn}
		mutableColumns             = postgres.ColumnList{ForeignServerCatalogColumn, ForeignServerNameColumn, OptionNameColumn, OptionValueColumn}
	)

	return foreignServerOptionsTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ForeignServerCatalog: ForeignServerCatalogColumn,
		ForeignServerName:    ForeignServerNameColumn,
		OptionName:           OptionNameColumn,
		OptionValue:          OptionValueColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
