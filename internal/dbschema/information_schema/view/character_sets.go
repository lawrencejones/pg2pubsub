//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var CharacterSets = newCharacterSetsTable()

type CharacterSetsTable struct {
	postgres.Table

	//Columns
	CharacterSetCatalog   postgres.ColumnString
	CharacterSetSchema    postgres.ColumnString
	CharacterSetName      postgres.ColumnString
	CharacterRepertoire   postgres.ColumnString
	FormOfUse             postgres.ColumnString
	DefaultCollateCatalog postgres.ColumnString
	DefaultCollateSchema  postgres.ColumnString
	DefaultCollateName    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new CharacterSetsTable with assigned alias
func (a *CharacterSetsTable) AS(alias string) *CharacterSetsTable {
	aliasTable := newCharacterSetsTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newCharacterSetsTable() *CharacterSetsTable {
	var (
		CharacterSetCatalogColumn   = postgres.StringColumn("character_set_catalog")
		CharacterSetSchemaColumn    = postgres.StringColumn("character_set_schema")
		CharacterSetNameColumn      = postgres.StringColumn("character_set_name")
		CharacterRepertoireColumn   = postgres.StringColumn("character_repertoire")
		FormOfUseColumn             = postgres.StringColumn("form_of_use")
		DefaultCollateCatalogColumn = postgres.StringColumn("default_collate_catalog")
		DefaultCollateSchemaColumn  = postgres.StringColumn("default_collate_schema")
		DefaultCollateNameColumn    = postgres.StringColumn("default_collate_name")
	)

	return &CharacterSetsTable{
		Table: postgres.NewTable("information_schema", "character_sets", CharacterSetCatalogColumn, CharacterSetSchemaColumn, CharacterSetNameColumn, CharacterRepertoireColumn, FormOfUseColumn, DefaultCollateCatalogColumn, DefaultCollateSchemaColumn, DefaultCollateNameColumn),

		//Columns
		CharacterSetCatalog:   CharacterSetCatalogColumn,
		CharacterSetSchema:    CharacterSetSchemaColumn,
		CharacterSetName:      CharacterSetNameColumn,
		CharacterRepertoire:   CharacterRepertoireColumn,
		FormOfUse:             FormOfUseColumn,
		DefaultCollateCatalog: DefaultCollateCatalogColumn,
		DefaultCollateSchema:  DefaultCollateSchemaColumn,
		DefaultCollateName:    DefaultCollateNameColumn,

		AllColumns:     postgres.ColumnList{CharacterSetCatalogColumn, CharacterSetSchemaColumn, CharacterSetNameColumn, CharacterRepertoireColumn, FormOfUseColumn, DefaultCollateCatalogColumn, DefaultCollateSchemaColumn, DefaultCollateNameColumn},
		MutableColumns: postgres.ColumnList{CharacterSetCatalogColumn, CharacterSetSchemaColumn, CharacterSetNameColumn, CharacterRepertoireColumn, FormOfUseColumn, DefaultCollateCatalogColumn, DefaultCollateSchemaColumn, DefaultCollateNameColumn},
	}
}
