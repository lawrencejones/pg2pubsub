//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CheckConstraintRoutineUsage = newCheckConstraintRoutineUsageTable()

type checkConstraintRoutineUsageTable struct {
	postgres.Table

	//Columns
	ConstraintCatalog postgres.ColumnString
	ConstraintSchema  postgres.ColumnString
	ConstraintName    postgres.ColumnString
	SpecificCatalog   postgres.ColumnString
	SpecificSchema    postgres.ColumnString
	SpecificName      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CheckConstraintRoutineUsageTable struct {
	checkConstraintRoutineUsageTable

	EXCLUDED checkConstraintRoutineUsageTable
}

// AS creates new CheckConstraintRoutineUsageTable with assigned alias
func (a *CheckConstraintRoutineUsageTable) AS(alias string) *CheckConstraintRoutineUsageTable {
	aliasTable := newCheckConstraintRoutineUsageTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newCheckConstraintRoutineUsageTable() *CheckConstraintRoutineUsageTable {
	return &CheckConstraintRoutineUsageTable{
		checkConstraintRoutineUsageTable: newCheckConstraintRoutineUsageTableImpl("information_schema", "check_constraint_routine_usage"),
		EXCLUDED:                         newCheckConstraintRoutineUsageTableImpl("", "excluded"),
	}
}

func newCheckConstraintRoutineUsageTableImpl(schemaName, tableName string) checkConstraintRoutineUsageTable {
	var (
		ConstraintCatalogColumn = postgres.StringColumn("constraint_catalog")
		ConstraintSchemaColumn  = postgres.StringColumn("constraint_schema")
		ConstraintNameColumn    = postgres.StringColumn("constraint_name")
		SpecificCatalogColumn   = postgres.StringColumn("specific_catalog")
		SpecificSchemaColumn    = postgres.StringColumn("specific_schema")
		SpecificNameColumn      = postgres.StringColumn("specific_name")
		allColumns              = postgres.ColumnList{ConstraintCatalogColumn, ConstraintSchemaColumn, ConstraintNameColumn, SpecificCatalogColumn, SpecificSchemaColumn, SpecificNameColumn}
		mutableColumns          = postgres.ColumnList{ConstraintCatalogColumn, ConstraintSchemaColumn, ConstraintNameColumn, SpecificCatalogColumn, SpecificSchemaColumn, SpecificNameColumn}
	)

	return checkConstraintRoutineUsageTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ConstraintCatalog: ConstraintCatalogColumn,
		ConstraintSchema:  ConstraintSchemaColumn,
		ConstraintName:    ConstraintNameColumn,
		SpecificCatalog:   SpecificCatalogColumn,
		SpecificSchema:    SpecificSchemaColumn,
		SpecificName:      SpecificNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
