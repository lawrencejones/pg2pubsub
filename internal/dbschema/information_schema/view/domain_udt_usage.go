//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var DomainUdtUsage = newDomainUdtUsageTable()

type DomainUdtUsageTable struct {
	postgres.Table

	//Columns
	UdtCatalog    postgres.ColumnString
	UdtSchema     postgres.ColumnString
	UdtName       postgres.ColumnString
	DomainCatalog postgres.ColumnString
	DomainSchema  postgres.ColumnString
	DomainName    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new DomainUdtUsageTable with assigned alias
func (a *DomainUdtUsageTable) AS(alias string) *DomainUdtUsageTable {
	aliasTable := newDomainUdtUsageTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newDomainUdtUsageTable() *DomainUdtUsageTable {
	var (
		UdtCatalogColumn    = postgres.StringColumn("udt_catalog")
		UdtSchemaColumn     = postgres.StringColumn("udt_schema")
		UdtNameColumn       = postgres.StringColumn("udt_name")
		DomainCatalogColumn = postgres.StringColumn("domain_catalog")
		DomainSchemaColumn  = postgres.StringColumn("domain_schema")
		DomainNameColumn    = postgres.StringColumn("domain_name")
	)

	return &DomainUdtUsageTable{
		Table: postgres.NewTable("information_schema", "domain_udt_usage", UdtCatalogColumn, UdtSchemaColumn, UdtNameColumn, DomainCatalogColumn, DomainSchemaColumn, DomainNameColumn),

		//Columns
		UdtCatalog:    UdtCatalogColumn,
		UdtSchema:     UdtSchemaColumn,
		UdtName:       UdtNameColumn,
		DomainCatalog: DomainCatalogColumn,
		DomainSchema:  DomainSchemaColumn,
		DomainName:    DomainNameColumn,

		AllColumns:     postgres.ColumnList{UdtCatalogColumn, UdtSchemaColumn, UdtNameColumn, DomainCatalogColumn, DomainSchemaColumn, DomainNameColumn},
		MutableColumns: postgres.ColumnList{UdtCatalogColumn, UdtSchemaColumn, UdtNameColumn, DomainCatalogColumn, DomainSchemaColumn, DomainNameColumn},
	}
}
