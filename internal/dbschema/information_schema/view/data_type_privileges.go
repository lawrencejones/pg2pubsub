//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var DataTypePrivileges = newDataTypePrivilegesTable()

type dataTypePrivilegesTable struct {
	postgres.Table

	//Columns
	ObjectCatalog postgres.ColumnString
	ObjectSchema  postgres.ColumnString
	ObjectName    postgres.ColumnString
	ObjectType    postgres.ColumnString
	DtdIdentifier postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type DataTypePrivilegesTable struct {
	dataTypePrivilegesTable

	EXCLUDED dataTypePrivilegesTable
}

// AS creates new DataTypePrivilegesTable with assigned alias
func (a *DataTypePrivilegesTable) AS(alias string) *DataTypePrivilegesTable {
	aliasTable := newDataTypePrivilegesTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newDataTypePrivilegesTable() *DataTypePrivilegesTable {
	return &DataTypePrivilegesTable{
		dataTypePrivilegesTable: newDataTypePrivilegesTableImpl("information_schema", "data_type_privileges"),
		EXCLUDED:                newDataTypePrivilegesTableImpl("", "excluded"),
	}
}

func newDataTypePrivilegesTableImpl(schemaName, tableName string) dataTypePrivilegesTable {
	var (
		ObjectCatalogColumn = postgres.StringColumn("object_catalog")
		ObjectSchemaColumn  = postgres.StringColumn("object_schema")
		ObjectNameColumn    = postgres.StringColumn("object_name")
		ObjectTypeColumn    = postgres.StringColumn("object_type")
		DtdIdentifierColumn = postgres.StringColumn("dtd_identifier")
		allColumns          = postgres.ColumnList{ObjectCatalogColumn, ObjectSchemaColumn, ObjectNameColumn, ObjectTypeColumn, DtdIdentifierColumn}
		mutableColumns      = postgres.ColumnList{ObjectCatalogColumn, ObjectSchemaColumn, ObjectNameColumn, ObjectTypeColumn, DtdIdentifierColumn}
	)

	return dataTypePrivilegesTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ObjectCatalog: ObjectCatalogColumn,
		ObjectSchema:  ObjectSchemaColumn,
		ObjectName:    ObjectNameColumn,
		ObjectType:    ObjectTypeColumn,
		DtdIdentifier: DtdIdentifierColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
