//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var ConstraintTableUsage = newConstraintTableUsageTable()

type ConstraintTableUsageTable struct {
	postgres.Table

	//Columns
	TableCatalog      postgres.ColumnString
	TableSchema       postgres.ColumnString
	TableName         postgres.ColumnString
	ConstraintCatalog postgres.ColumnString
	ConstraintSchema  postgres.ColumnString
	ConstraintName    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new ConstraintTableUsageTable with assigned alias
func (a *ConstraintTableUsageTable) AS(alias string) *ConstraintTableUsageTable {
	aliasTable := newConstraintTableUsageTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newConstraintTableUsageTable() *ConstraintTableUsageTable {
	var (
		TableCatalogColumn      = postgres.StringColumn("table_catalog")
		TableSchemaColumn       = postgres.StringColumn("table_schema")
		TableNameColumn         = postgres.StringColumn("table_name")
		ConstraintCatalogColumn = postgres.StringColumn("constraint_catalog")
		ConstraintSchemaColumn  = postgres.StringColumn("constraint_schema")
		ConstraintNameColumn    = postgres.StringColumn("constraint_name")
	)

	return &ConstraintTableUsageTable{
		Table: postgres.NewTable("information_schema", "constraint_table_usage", TableCatalogColumn, TableSchemaColumn, TableNameColumn, ConstraintCatalogColumn, ConstraintSchemaColumn, ConstraintNameColumn),

		//Columns
		TableCatalog:      TableCatalogColumn,
		TableSchema:       TableSchemaColumn,
		TableName:         TableNameColumn,
		ConstraintCatalog: ConstraintCatalogColumn,
		ConstraintSchema:  ConstraintSchemaColumn,
		ConstraintName:    ConstraintNameColumn,

		AllColumns:     postgres.ColumnList{TableCatalogColumn, TableSchemaColumn, TableNameColumn, ConstraintCatalogColumn, ConstraintSchemaColumn, ConstraintNameColumn},
		MutableColumns: postgres.ColumnList{TableCatalogColumn, TableSchemaColumn, TableNameColumn, ConstraintCatalogColumn, ConstraintSchemaColumn, ConstraintNameColumn},
	}
}
