//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var DataTypePrivileges = newDataTypePrivilegesTable()

type DataTypePrivilegesTable struct {
	postgres.Table

	//Columns
	ObjectCatalog postgres.ColumnString
	ObjectSchema  postgres.ColumnString
	ObjectName    postgres.ColumnString
	ObjectType    postgres.ColumnString
	DtdIdentifier postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new DataTypePrivilegesTable with assigned alias
func (a *DataTypePrivilegesTable) AS(alias string) *DataTypePrivilegesTable {
	aliasTable := newDataTypePrivilegesTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newDataTypePrivilegesTable() *DataTypePrivilegesTable {
	var (
		ObjectCatalogColumn = postgres.StringColumn("object_catalog")
		ObjectSchemaColumn  = postgres.StringColumn("object_schema")
		ObjectNameColumn    = postgres.StringColumn("object_name")
		ObjectTypeColumn    = postgres.StringColumn("object_type")
		DtdIdentifierColumn = postgres.StringColumn("dtd_identifier")
	)

	return &DataTypePrivilegesTable{
		Table: postgres.NewTable("information_schema", "data_type_privileges", ObjectCatalogColumn, ObjectSchemaColumn, ObjectNameColumn, ObjectTypeColumn, DtdIdentifierColumn),

		//Columns
		ObjectCatalog: ObjectCatalogColumn,
		ObjectSchema:  ObjectSchemaColumn,
		ObjectName:    ObjectNameColumn,
		ObjectType:    ObjectTypeColumn,
		DtdIdentifier: DtdIdentifierColumn,

		AllColumns:     postgres.ColumnList{ObjectCatalogColumn, ObjectSchemaColumn, ObjectNameColumn, ObjectTypeColumn, DtdIdentifierColumn},
		MutableColumns: postgres.ColumnList{ObjectCatalogColumn, ObjectSchemaColumn, ObjectNameColumn, ObjectTypeColumn, DtdIdentifierColumn},
	}
}
