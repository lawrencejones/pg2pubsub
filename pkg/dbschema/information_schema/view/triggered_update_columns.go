//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 09:15:06 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var TriggeredUpdateColumns = newTriggeredUpdateColumnsTable()

type TriggeredUpdateColumnsTable struct {
	postgres.Table

	//Columns
	TriggerCatalog     postgres.ColumnString
	TriggerSchema      postgres.ColumnString
	TriggerName        postgres.ColumnString
	EventObjectCatalog postgres.ColumnString
	EventObjectSchema  postgres.ColumnString
	EventObjectTable   postgres.ColumnString
	EventObjectColumn  postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new TriggeredUpdateColumnsTable with assigned alias
func (a *TriggeredUpdateColumnsTable) AS(alias string) *TriggeredUpdateColumnsTable {
	aliasTable := newTriggeredUpdateColumnsTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newTriggeredUpdateColumnsTable() *TriggeredUpdateColumnsTable {
	var (
		TriggerCatalogColumn     = postgres.StringColumn("trigger_catalog")
		TriggerSchemaColumn      = postgres.StringColumn("trigger_schema")
		TriggerNameColumn        = postgres.StringColumn("trigger_name")
		EventObjectCatalogColumn = postgres.StringColumn("event_object_catalog")
		EventObjectSchemaColumn  = postgres.StringColumn("event_object_schema")
		EventObjectTableColumn   = postgres.StringColumn("event_object_table")
		EventObjectColumnColumn  = postgres.StringColumn("event_object_column")
	)

	return &TriggeredUpdateColumnsTable{
		Table: postgres.NewTable("information_schema", "triggered_update_columns", TriggerCatalogColumn, TriggerSchemaColumn, TriggerNameColumn, EventObjectCatalogColumn, EventObjectSchemaColumn, EventObjectTableColumn, EventObjectColumnColumn),

		//Columns
		TriggerCatalog:     TriggerCatalogColumn,
		TriggerSchema:      TriggerSchemaColumn,
		TriggerName:        TriggerNameColumn,
		EventObjectCatalog: EventObjectCatalogColumn,
		EventObjectSchema:  EventObjectSchemaColumn,
		EventObjectTable:   EventObjectTableColumn,
		EventObjectColumn:  EventObjectColumnColumn,

		AllColumns:     postgres.ColumnList{TriggerCatalogColumn, TriggerSchemaColumn, TriggerNameColumn, EventObjectCatalogColumn, EventObjectSchemaColumn, EventObjectTableColumn, EventObjectColumnColumn},
		MutableColumns: postgres.ColumnList{TriggerCatalogColumn, TriggerSchemaColumn, TriggerNameColumn, EventObjectCatalogColumn, EventObjectSchemaColumn, EventObjectTableColumn, EventObjectColumnColumn},
	}
}
