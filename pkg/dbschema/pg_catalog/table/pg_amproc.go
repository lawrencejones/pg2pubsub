//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var PgAmproc = newPgAmprocTable()

type PgAmprocTable struct {
	postgres.Table

	//Columns
	Oid             postgres.ColumnString
	Amprocfamily    postgres.ColumnString
	Amproclefttype  postgres.ColumnString
	Amprocrighttype postgres.ColumnString
	Amprocnum       postgres.ColumnInteger
	Amproc          postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgAmprocTable with assigned alias
func (a *PgAmprocTable) AS(alias string) *PgAmprocTable {
	aliasTable := newPgAmprocTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgAmprocTable() *PgAmprocTable {
	var (
		OidColumn             = postgres.StringColumn("oid")
		AmprocfamilyColumn    = postgres.StringColumn("amprocfamily")
		AmproclefttypeColumn  = postgres.StringColumn("amproclefttype")
		AmprocrighttypeColumn = postgres.StringColumn("amprocrighttype")
		AmprocnumColumn       = postgres.IntegerColumn("amprocnum")
		AmprocColumn          = postgres.StringColumn("amproc")
	)

	return &PgAmprocTable{
		Table: postgres.NewTable("pg_catalog", "pg_amproc", OidColumn, AmprocfamilyColumn, AmproclefttypeColumn, AmprocrighttypeColumn, AmprocnumColumn, AmprocColumn),

		//Columns
		Oid:             OidColumn,
		Amprocfamily:    AmprocfamilyColumn,
		Amproclefttype:  AmproclefttypeColumn,
		Amprocrighttype: AmprocrighttypeColumn,
		Amprocnum:       AmprocnumColumn,
		Amproc:          AmprocColumn,

		AllColumns:     postgres.ColumnList{OidColumn, AmprocfamilyColumn, AmproclefttypeColumn, AmprocrighttypeColumn, AmprocnumColumn, AmprocColumn},
		MutableColumns: postgres.ColumnList{OidColumn, AmprocfamilyColumn, AmproclefttypeColumn, AmprocrighttypeColumn, AmprocnumColumn, AmprocColumn},
	}
}
