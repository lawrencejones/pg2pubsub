//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var PgDepend = newPgDependTable()

type PgDependTable struct {
	postgres.Table

	//Columns
	Classid     postgres.ColumnString
	Objid       postgres.ColumnString
	Objsubid    postgres.ColumnInteger
	Refclassid  postgres.ColumnString
	Refobjid    postgres.ColumnString
	Refobjsubid postgres.ColumnInteger
	Deptype     postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgDependTable with assigned alias
func (a *PgDependTable) AS(alias string) *PgDependTable {
	aliasTable := newPgDependTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgDependTable() *PgDependTable {
	var (
		ClassidColumn     = postgres.StringColumn("classid")
		ObjidColumn       = postgres.StringColumn("objid")
		ObjsubidColumn    = postgres.IntegerColumn("objsubid")
		RefclassidColumn  = postgres.StringColumn("refclassid")
		RefobjidColumn    = postgres.StringColumn("refobjid")
		RefobjsubidColumn = postgres.IntegerColumn("refobjsubid")
		DeptypeColumn     = postgres.StringColumn("deptype")
	)

	return &PgDependTable{
		Table: postgres.NewTable("pg_catalog", "pg_depend", ClassidColumn, ObjidColumn, ObjsubidColumn, RefclassidColumn, RefobjidColumn, RefobjsubidColumn, DeptypeColumn),

		//Columns
		Classid:     ClassidColumn,
		Objid:       ObjidColumn,
		Objsubid:    ObjsubidColumn,
		Refclassid:  RefclassidColumn,
		Refobjid:    RefobjidColumn,
		Refobjsubid: RefobjsubidColumn,
		Deptype:     DeptypeColumn,

		AllColumns:     postgres.ColumnList{ClassidColumn, ObjidColumn, ObjsubidColumn, RefclassidColumn, RefobjidColumn, RefobjsubidColumn, DeptypeColumn},
		MutableColumns: postgres.ColumnList{ClassidColumn, ObjidColumn, ObjsubidColumn, RefclassidColumn, RefobjidColumn, RefobjsubidColumn, DeptypeColumn},
	}
}
