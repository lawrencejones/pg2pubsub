//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var PgStatBgwriter = newPgStatBgwriterTable()

type PgStatBgwriterTable struct {
	postgres.Table

	//Columns
	CheckpointsTimed    postgres.ColumnInteger
	CheckpointsReq      postgres.ColumnInteger
	CheckpointWriteTime postgres.ColumnFloat
	CheckpointSyncTime  postgres.ColumnFloat
	BuffersCheckpoint   postgres.ColumnInteger
	BuffersClean        postgres.ColumnInteger
	MaxwrittenClean     postgres.ColumnInteger
	BuffersBackend      postgres.ColumnInteger
	BuffersBackendFsync postgres.ColumnInteger
	BuffersAlloc        postgres.ColumnInteger
	StatsReset          postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgStatBgwriterTable with assigned alias
func (a *PgStatBgwriterTable) AS(alias string) *PgStatBgwriterTable {
	aliasTable := newPgStatBgwriterTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgStatBgwriterTable() *PgStatBgwriterTable {
	var (
		CheckpointsTimedColumn    = postgres.IntegerColumn("checkpoints_timed")
		CheckpointsReqColumn      = postgres.IntegerColumn("checkpoints_req")
		CheckpointWriteTimeColumn = postgres.FloatColumn("checkpoint_write_time")
		CheckpointSyncTimeColumn  = postgres.FloatColumn("checkpoint_sync_time")
		BuffersCheckpointColumn   = postgres.IntegerColumn("buffers_checkpoint")
		BuffersCleanColumn        = postgres.IntegerColumn("buffers_clean")
		MaxwrittenCleanColumn     = postgres.IntegerColumn("maxwritten_clean")
		BuffersBackendColumn      = postgres.IntegerColumn("buffers_backend")
		BuffersBackendFsyncColumn = postgres.IntegerColumn("buffers_backend_fsync")
		BuffersAllocColumn        = postgres.IntegerColumn("buffers_alloc")
		StatsResetColumn          = postgres.TimestampzColumn("stats_reset")
	)

	return &PgStatBgwriterTable{
		Table: postgres.NewTable("pg_catalog", "pg_stat_bgwriter", CheckpointsTimedColumn, CheckpointsReqColumn, CheckpointWriteTimeColumn, CheckpointSyncTimeColumn, BuffersCheckpointColumn, BuffersCleanColumn, MaxwrittenCleanColumn, BuffersBackendColumn, BuffersBackendFsyncColumn, BuffersAllocColumn, StatsResetColumn),

		//Columns
		CheckpointsTimed:    CheckpointsTimedColumn,
		CheckpointsReq:      CheckpointsReqColumn,
		CheckpointWriteTime: CheckpointWriteTimeColumn,
		CheckpointSyncTime:  CheckpointSyncTimeColumn,
		BuffersCheckpoint:   BuffersCheckpointColumn,
		BuffersClean:        BuffersCleanColumn,
		MaxwrittenClean:     MaxwrittenCleanColumn,
		BuffersBackend:      BuffersBackendColumn,
		BuffersBackendFsync: BuffersBackendFsyncColumn,
		BuffersAlloc:        BuffersAllocColumn,
		StatsReset:          StatsResetColumn,

		AllColumns:     postgres.ColumnList{CheckpointsTimedColumn, CheckpointsReqColumn, CheckpointWriteTimeColumn, CheckpointSyncTimeColumn, BuffersCheckpointColumn, BuffersCleanColumn, MaxwrittenCleanColumn, BuffersBackendColumn, BuffersBackendFsyncColumn, BuffersAllocColumn, StatsResetColumn},
		MutableColumns: postgres.ColumnList{CheckpointsTimedColumn, CheckpointsReqColumn, CheckpointWriteTimeColumn, CheckpointSyncTimeColumn, BuffersCheckpointColumn, BuffersCleanColumn, MaxwrittenCleanColumn, BuffersBackendColumn, BuffersBackendFsyncColumn, BuffersAllocColumn, StatsResetColumn},
	}
}
