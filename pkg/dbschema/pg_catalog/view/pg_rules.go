//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var PgRules = newPgRulesTable()

type PgRulesTable struct {
	postgres.Table

	//Columns
	Schemaname postgres.ColumnString
	Tablename  postgres.ColumnString
	Rulename   postgres.ColumnString
	Definition postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgRulesTable with assigned alias
func (a *PgRulesTable) AS(alias string) *PgRulesTable {
	aliasTable := newPgRulesTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgRulesTable() *PgRulesTable {
	var (
		SchemanameColumn = postgres.StringColumn("schemaname")
		TablenameColumn  = postgres.StringColumn("tablename")
		RulenameColumn   = postgres.StringColumn("rulename")
		DefinitionColumn = postgres.StringColumn("definition")
	)

	return &PgRulesTable{
		Table: postgres.NewTable("pg_catalog", "pg_rules", SchemanameColumn, TablenameColumn, RulenameColumn, DefinitionColumn),

		//Columns
		Schemaname: SchemanameColumn,
		Tablename:  TablenameColumn,
		Rulename:   RulenameColumn,
		Definition: DefinitionColumn,

		AllColumns:     postgres.ColumnList{SchemanameColumn, TablenameColumn, RulenameColumn, DefinitionColumn},
		MutableColumns: postgres.ColumnList{SchemanameColumn, TablenameColumn, RulenameColumn, DefinitionColumn},
	}
}
