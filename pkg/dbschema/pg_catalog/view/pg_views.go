//
// Code generated by go-jet DO NOT EDIT.
// Generated at Tuesday, 12-May-20 07:59:32 BST
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/postgres"
)

var PgViews = newPgViewsTable()

type PgViewsTable struct {
	postgres.Table

	//Columns
	Schemaname postgres.ColumnString
	Viewname   postgres.ColumnString
	Viewowner  postgres.ColumnString
	Definition postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

// creates new PgViewsTable with assigned alias
func (a *PgViewsTable) AS(alias string) *PgViewsTable {
	aliasTable := newPgViewsTable()

	aliasTable.Table.AS(alias)

	return aliasTable
}

func newPgViewsTable() *PgViewsTable {
	var (
		SchemanameColumn = postgres.StringColumn("schemaname")
		ViewnameColumn   = postgres.StringColumn("viewname")
		ViewownerColumn  = postgres.StringColumn("viewowner")
		DefinitionColumn = postgres.StringColumn("definition")
	)

	return &PgViewsTable{
		Table: postgres.NewTable("pg_catalog", "pg_views", SchemanameColumn, ViewnameColumn, ViewownerColumn, DefinitionColumn),

		//Columns
		Schemaname: SchemanameColumn,
		Viewname:   ViewnameColumn,
		Viewowner:  ViewownerColumn,
		Definition: DefinitionColumn,

		AllColumns:     postgres.ColumnList{SchemanameColumn, ViewnameColumn, ViewownerColumn, DefinitionColumn},
		MutableColumns: postgres.ColumnList{SchemanameColumn, ViewnameColumn, ViewownerColumn, DefinitionColumn},
	}
}
