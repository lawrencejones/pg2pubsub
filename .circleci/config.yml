---
version: 2

references:
  docker_golang: &docker_golang
    docker:
      - image: golang:1.13
        environment:
          PGHOST: "127.0.0.1"
          PGUSER: "postgres"
      - image: postgres:12.0
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: pg2pubsub_test
          POSTGRES_PASSWORD: ""
    working_directory: /pg2pubsub

jobs:
  unit-integration:
    <<: *docker_golang
    steps:
      - checkout
      - run:
          name: Install ginkgo test runner
          command: go get github.com/onsi/ginkgo/ginkgo
      - run:
          name: Install Postgres
          command: apt-get update && apt-get install -y postgresql-client libpq-dev
      - run:
          name: Create test database
          command: make recreatedb
      - run:
          name: Run tests
          command: ginkgo -race -r

  release:
    <<: *docker_golang
    working_directory: /pg2pubsub
    steps:
      - checkout
      - run:
          name: Release
          command: |
            CURRENT_VERSION="v$(cat VERSION)"
            if [[ $(git tag -l "${CURRENT_VERSION}") == "${CURRENT_VERSION}" ]]; then
              echo "Version ${CURRENT_VERSION} is already released"
              exit 0
            fi

            curl -L -o /tmp/goreleaser_Linux_x86_64.tar.gz https://github.com/goreleaser/goreleaser/releases/download/v0.101.0/goreleaser_Linux_x86_64.tar.gz
            tar zxf /tmp/goreleaser_Linux_x86_64.tar.gz -C /tmp
            git log --pretty=oneline --abbrev-commit --no-decorate --no-color "$(git describe --tags --abbrev=0)..HEAD" -- pkg cmd vendor internal > /tmp/release-notes
            git tag "${CURRENT_VERSION}"
            git push --tags
            /tmp/goreleaser --rm-dist --release-notes /tmp/release-notes

workflows:
  version: 2
  build-integration:
    jobs:
      - unit-integration
      - release:
          requires:
            - unit-integration
          filters:
            branches: {only: master}
